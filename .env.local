# AZ Interface Environment Configuration
# Copy this file to .env and update the values

# ===== APPLICATION CONFIGURATION =====

# Node Environment
NODE_ENV=development

# Application URLs
FRONTEND_URL=http://localhost:3000
BACKEND_URL=http://localhost:8000

# ===== DATABASE CONFIGURATION =====

# PostgreSQL
POSTGRES_DB=az_interface
POSTGRES_USER=az_user
POSTGRES_PASSWORD=your_secure_password_here
DATABASE_URL=postgresql://az_user:your_secure_password_here@postgres:5432/az_interface

# Redis
REDIS_PASSWORD=your_redis_password_here
REDIS_URL=redis://:your_redis_password_here@redis:6379

# ===== SECURITY =====

# JWT Secret (generate with: openssl rand -hex 32)
SECRET_KEY=your_super_secret_jwt_key_here_change_this_in_production

# API Keys (keep secure)
GEMINI_API_KEY=your_gemini_api_key_here
OPENAI_API_KEY=your_openai_api_key_here
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# ===== MONITORING & OBSERVABILITY =====

# Grafana
GRAFANA_PASSWORD=your_grafana_admin_password_here

# Prometheus
PROMETHEUS_RETENTION_TIME=200h

# Elasticsearch
ELASTICSEARCH_PASSWORD=your_elasticsearch_password_here

# ===== WORKFLOW AUTOMATION =====

# n8n
N8N_USER=admin
N8N_PASSWORD=your_n8n_password_here

# ===== BACKUP & RECOVERY =====

# AWS S3 Backup (optional)
BACKUP_S3_BUCKET=your-backup-bucket-name
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_DEFAULT_REGION=us-east-1

# Backup Configuration
BACKUP_RETENTION_DAYS=30
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM

# ===== EMAIL & NOTIFICATIONS =====

# SMTP Configuration (for password reset emails)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_app_password_here
SMTP_FROM=noreply@yourdomain.com

# MailHog (for development)
MAILHOG_SMTP_PORT=1025
MAILHOG_WEB_PORT=8025

# ===== AI & ML SERVICES =====

# Ollama Configuration
OLLAMA_HOST=http://ollama:11434
OLLAMA_MODEL=llama3

# Milvus Vector Database
MILVUS_HOST=milvus
MILVUS_PORT=19530

# ===== DEVELOPMENT & TESTING =====

# Development Settings
DEBUG=false
LOG_LEVEL=INFO
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# Testing
TEST_DATABASE_URL=postgresql://test_user:test_password@postgres:5432/test_db

# ===== PERFORMANCE & SCALING =====

# Rate Limiting
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_WINDOW=60

# Token Configuration
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# ===== EXTERNAL SERVICES =====

# SonarQube
SONARQUBE_URL=http://localhost:9001
SONARQUBE_TOKEN=your_sonarqube_token_here

# Portainer
PORTAINER_URL=http://localhost:9000

# ===== LOGGING =====

# Log Configuration
LOG_FILE_PATH=/app/logs
LOG_MAX_SIZE=100MB
LOG_MAX_FILES=10

# ===== NETWORKING =====

# Traefik
TRAEFIK_DASHBOARD_URL=http://localhost:8082

# ===== CONTAINER MANAGEMENT =====

# Docker Registry (if using private registry)
DOCKER_REGISTRY=your-registry.com
DOCKER_USERNAME=your_username
DOCKER_PASSWORD=your_password

# ===== SECURITY HEADERS =====

# Content Security Policy
CSP_DEFAULT_SRC="'self'"
CSP_SCRIPT_SRC="'self' 'unsafe-inline' 'unsafe-eval'"
CSP_STYLE_SRC="'self' 'unsafe-inline'"
CSP_IMG_SRC="'self' data: https:"
CSP_FONT_SRC="'self' data:"
CSP_CONNECT_SRC="'self' https:"

# ===== FEATURE FLAGS =====

# Enable/disable features
ENABLE_EMAIL_NOTIFICATIONS=true
ENABLE_BACKUP_SERVICE=true
ENABLE_MONITORING=true
ENABLE_AI_FEATURES=true
ENABLE_WORKFLOW_AUTOMATION=true

# ===== DEPLOYMENT =====

# Deployment Environment
DEPLOYMENT_ENV=production
DEPLOYMENT_REGION=us-east-1
DEPLOYMENT_VERSION=1.0.0

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3 
