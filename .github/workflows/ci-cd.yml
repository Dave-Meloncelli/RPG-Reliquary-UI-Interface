name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Type check
      run: npm run type-check

    - name: Lint
      run: npm run lint

    - name: Run tests
      run: npm run test
      env:
        CI: true

    - name: Build
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Run npm audit
      run: npm audit --audit-level=high

  lighthouse:
    name: Performance & Accessibility
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Start server
      run: |
        npm run preview &
        sleep 10

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v12
      with:
        urls: |
          http://localhost:4173
        uploadArtifacts: true
        temporaryPublicStorage: true
        configPath: './.lighthouserc.json'

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # Add your staging deployment logic here
        # Example: Deploy to Vercel, Netlify, or other hosting service

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, security, lighthouse]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Deploy to production
      run: |
        echo "Deploying to production environment"
        # Add your production deployment logic here
        # Example: Deploy to Vercel, Netlify, or other hosting service

  notify:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [test, security, lighthouse, deploy-staging, deploy-production]
    if: failure()
    
    steps:
    - name: Notify failure
      run: |
        echo "CI/CD pipeline failed"
        # Add notification logic here (Slack, email, etc.) 