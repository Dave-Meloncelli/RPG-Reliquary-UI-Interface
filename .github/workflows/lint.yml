name: Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Node deps
        run: npm ci

      - name: Run lint (non-blocking)
        run: npm run lint

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Python env check (non-blocking)
        run: python --version

      - name: Validate JSON reports (rigid)
        run: python tools/validate_json_reports.py

      - name: High-confidence secrets scan (rigid)
        run: python tools/scan_secrets_strict.py

      - name: Python dependency audit (rigid)
        run: |
          pip install safety
          safety check --json --output reports/safety_audit.json || true
          python -c "
          import json
          with open('reports/safety_audit.json', 'r') as f:
              data = json.load(f)
          critical = [v for v in data if v.get('severity') == 'critical']
          high = [v for v in data if v.get('severity') == 'high']
          if critical or high:
              print(f'Found {len(critical)} critical, {len(high)} high severity vulnerabilities')
              exit(1)
          print('No critical/high vulnerabilities found')
          "

      - name: Node.js dependency audit (rigid)
        run: |
          npm audit --audit-level=high --json > reports/npm_audit.json || true
          python -c "
          import json
          with open('reports/npm_audit.json', 'r') as f:
              data = json.load(f)
          if data.get('vulnerabilities'):
              high_crit = sum(1 for v in data['vulnerabilities'].values() 
                             if v.get('severity') in ['critical', 'high'])
              if high_crit > 0:
                  print(f'Found {high_crit} critical/high vulnerabilities')
                  exit(1)
          print('No critical/high vulnerabilities found')
          "

      - name: Generate Python SBOM (flexible)
        run: |
          pip install cyclonedx-bom
          cyclonedx-py --format json --output reports/python-sbom.json

      - name: Generate Node.js SBOM (flexible)
        run: |
          npm install -g @cyclonedx/cyclonedx-npm
          cyclonedx-npm --output-format json --output-file reports/nodejs-sbom.json

      - name: Upload reports (flexible)
        uses: actions/upload-artifact@v4
        with:
          name: forensic-reports
          path: reports/


