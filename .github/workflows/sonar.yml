name: SonarQube Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:

      - name: Run Framework Integration
        run: |
          python autonomous-framework-v2.py quick_assessment

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Important for SonarQube analysis

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test
      env:
        CI: true

    - name: Build project
      run: npm run build

    - name: SonarQube Scan
      uses: sonarqube-quality-gate-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=az-interface
          -Dsonar.projectName=AZ Interface
          -Dsonar.projectVersion=1.0.0
          -Dsonar.sources=src
          -Dsonar.tests=src
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
          -Dsonar.coverage.exclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.ts,**/*.spec.tsx
          -Dsonar.test.inclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.ts,**/*.spec.tsx
          -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
          -Dsonar.sourceEncoding=UTF-8

    - name: Quality Gate Check
      uses: sonarqube-quality-gate-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        scanMetadataReportFile: .scannerwork/report-task.txt

    - name: Upload SonarQube results to GitHub
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: sonarqube-results
        path: .scannerwork/
        retention-days: 30 