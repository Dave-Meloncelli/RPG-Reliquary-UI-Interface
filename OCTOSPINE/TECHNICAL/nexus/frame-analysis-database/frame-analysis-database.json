{
  "database_info": {
    "name": "OCTOSPINE Frame Analysis Database",
    "version": "1.0.0",
    "created": "2025-08-13T11:56:13.642790",
    "description": "Comprehensive analysis of all frames",
    "total_analyses": 309
  },
  "frame_analyses": [
    {
      "frame_name": "autonomous-framework-v2.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-12T18:13:56.937565",
      "functionality_score": 85.0,
      "documentation_score": 51.858707971288254,
      "integration_score": 100.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "sys",
        "datetime",
        "pathlib",
        "enum",
        "os",
        "shutil",
        "typing",
        "importlib",
        "subprocess",
        "time",
        "dataclasses",
        "json",
        "urllib",
        "traceback",
        "tempfile"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "autonomous-framework.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-12T18:13:57.160510",
      "functionality_score": 85.0,
      "documentation_score": 51.38977635782747,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "datetime",
        "pathlib",
        "enum",
        "os",
        "typing",
        "importlib",
        "subprocess",
        "time",
        "dataclasses",
        "json",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:57.174643",
      "functionality_score": 100.0,
      "documentation_score": 36.54373927958834,
      "integration_score": 65.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 484
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "threading",
        "logging",
        "datetime",
        "pathlib",
        "enum",
        "typing",
        "subprocess",
        "time",
        "dataclasses",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "comprehensive-frame-analyzer.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:13:57.216766",
      "functionality_score": 100.0,
      "documentation_score": 52.57294429708223,
      "integration_score": 100.0,
      "risks": [
        {
          "type": "security",
          "level": "critical",
          "description": "Use of eval() function - potential code injection risk",
          "line": 413
        },
        {
          "type": "security",
          "level": "critical",
          "description": "Use of exec() function - potential code injection risk",
          "line": 421
        },
        {
          "type": "performance",
          "level": "medium",
          "description": "Potential performance issue with large loops",
          "line": 7
        },
        {
          "type": "dependency",
          "level": "medium",
          "description": "Wildcard import - potential namespace pollution",
          "line": 448
        }
      ],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [
        "_identify_pre_hooks"
      ],
      "post_hooks": [
        "_identify_post_hooks"
      ],
      "webhooks": [
        "_identify_pre_hooks",
        "_identify_post_hooks",
        "_identify_webhooks"
      ],
      "dependencies": [
        "ast",
        "glob",
        "inspect",
        "sys",
        "datetime",
        "enum",
        "os",
        "typing",
        "importlib",
        "dataclasses",
        "subprocess",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Address critical security risks immediately",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": [
        "Fix critical risk: Use of eval() function - potential code injection risk",
        "Fix critical risk: Use of exec() function - potential code injection risk"
      ]
    },
    {
      "frame_name": "cross-agent-communication-protocol-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:57.244058",
      "functionality_score": 85.0,
      "documentation_score": 37.161572052401745,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "threading",
        "logging",
        "datetime",
        "pathlib",
        "enum",
        "queue",
        "asyncio",
        "typing",
        "dataclasses",
        "time",
        "uuid",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "deep-pattern-recognition-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:57.670457",
      "functionality_score": 75.0,
      "documentation_score": 37.24696356275304,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "sys",
        "datetime",
        "pathlib",
        "os",
        "typing",
        "json",
        "traceback",
        "collections"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:57.708539",
      "functionality_score": 75.0,
      "documentation_score": 35.29469548133595,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "logging",
        "datetime",
        "concurrent",
        "pathlib",
        "enum",
        "typing",
        "subprocess",
        "time",
        "dataclasses",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "existence-check-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:57.747537",
      "functionality_score": 85.0,
      "documentation_score": 36.68,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "glob",
        "sys",
        "datetime",
        "os",
        "typing",
        "dataclasses",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filesystem-discovery-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:57.773907",
      "functionality_score": 55.0,
      "documentation_score": 35.54545454545455,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "datetime",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filetree-organizer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:57.806780",
      "functionality_score": 65.0,
      "documentation_score": 36.339285714285715,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "shutil",
        "pathlib",
        "typing",
        "json"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-intelligence-system.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
      "category": "intelligence",
      "analysis_timestamp": "2025-08-12T18:13:57.840426",
      "functionality_score": 75.0,
      "documentation_score": 36.6597510373444,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: universal_task_orchestrator",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "datetime",
        "enum",
        "os",
        "universal_task_orchestrator",
        "typing",
        "dataclasses",
        "research_information_frame",
        "existence_check_frame",
        "subprocess",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: universal_task_orchestrator",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "frame-rationalization-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:13:57.871462",
      "functionality_score": 75.0,
      "documentation_score": 37.11267605633803,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "logging",
        "datetime",
        "pathlib",
        "enum",
        "typing",
        "dataclasses",
        "time",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "human-approval-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:57.894668",
      "functionality_score": 75.0,
      "documentation_score": 37.201834862385326,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "datetime",
        "pathlib",
        "os",
        "typing",
        "json",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "import-dependency-graph-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:57.937319",
      "functionality_score": 55.0,
      "documentation_score": 35.46153846153846,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "datetime",
        "pathlib",
        "typing",
        "json"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "improvement-optimization-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:57.972948",
      "functionality_score": 55.0,
      "documentation_score": 36.504702194357364,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "datetime",
        "pathlib",
        "os",
        "typing",
        "subprocess",
        "json",
        "traceback"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "index-registrar-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:58.011158",
      "functionality_score": 55.0,
      "documentation_score": 35.625,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "datetime",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "intelligent-caching-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:58.043322",
      "functionality_score": 100.0,
      "documentation_score": 52.123893805309734,
      "integration_score": 70.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 42
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [
        "cleanup_expired",
        "cleanup"
      ],
      "webhooks": [],
      "dependencies": [
        "sys",
        "datetime",
        "pathlib",
        "shutil",
        "os",
        "typing",
        "time",
        "hashlib",
        "json",
        "traceback",
        "collections"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "knowledge-hub-update-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:58.138739",
      "functionality_score": 75.0,
      "documentation_score": 36.687979539641944,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "datetime",
        "pathlib",
        "os",
        "typing",
        "hashlib",
        "json",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "log-tailer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:58.180127",
      "functionality_score": 55.0,
      "documentation_score": 36.0948905109489,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "datetime",
        "pathlib",
        "os",
        "typing",
        "subprocess",
        "time",
        "json",
        "traceback"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "meta-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:13:58.217963",
      "functionality_score": 75.0,
      "documentation_score": 36.83333333333333,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "datetime",
        "pathlib",
        "os",
        "typing",
        "json",
        "traceback",
        "collections"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "parallel-execution-coordinator-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:58.258595",
      "functionality_score": 75.0,
      "documentation_score": 37.046908315565034,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "threading",
        "sys",
        "datetime",
        "pathlib",
        "concurrent",
        "os",
        "queue",
        "typing",
        "importlib",
        "dataclasses",
        "time",
        "json",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "predictive-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:13:58.310110",
      "functionality_score": 85.0,
      "documentation_score": 37.28476821192053,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "datetime",
        "pathlib",
        "os",
        "statistics",
        "typing",
        "json",
        "traceback",
        "collections"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "real-time-monitoring-dashboard-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
      "category": "diagnostic",
      "analysis_timestamp": "2025-08-12T18:13:58.420768",
      "functionality_score": 85.0,
      "documentation_score": 36.91897654584221,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "threading",
        "datetime",
        "pathlib",
        "asyncio",
        "typing",
        "subprocess",
        "time",
        "dataclasses",
        "psutil",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "research-information-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
      "category": "research",
      "analysis_timestamp": "2025-08-12T18:13:58.541161",
      "functionality_score": 75.0,
      "documentation_score": 37.24924012158055,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "research_chain",
          "description": "Can be enhanced with pattern recognition and synergy analysis",
          "related_frames": [
            "deep-pattern-recognition-frame.py",
            "synergy-analyzer.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "glob",
        "sys",
        "datetime",
        "os",
        "typing",
        "dataclasses",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "resource-allocation-engine-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:58.620862",
      "functionality_score": 85.0,
      "documentation_score": 37.5,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "threading",
        "logging",
        "datetime",
        "pathlib",
        "enum",
        "queue",
        "typing",
        "dataclasses",
        "time",
        "uuid",
        "psutil",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "security-audit-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
      "category": "security",
      "analysis_timestamp": "2025-08-12T18:13:58.675647",
      "functionality_score": 85.0,
      "documentation_score": 36.65289256198347,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "security_chain",
          "description": "Can be chained with other security frames for comprehensive audit",
          "related_frames": [
            "security-audit-frame.py",
            "risk-assessment-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "sys",
        "typing",
        "dataclasses",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "self-healing-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:58.726842",
      "functionality_score": 75.0,
      "documentation_score": 36.25226860254084,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "datetime",
        "pathlib",
        "os",
        "typing",
        "subprocess",
        "time",
        "json",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "universal-task-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-12T18:13:58.788452",
      "functionality_score": 75.0,
      "documentation_score": 36.959798994974875,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: security_audit_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "datetime",
        "enum",
        "os",
        "typing",
        "subprocess",
        "dataclasses",
        "existence_check_frame",
        "research_information_frame",
        "security_audit_frame",
        "json"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: existence_check_frame",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: security_audit_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "webhook-endpoint-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:13:58.837984",
      "functionality_score": 55.0,
      "documentation_score": 36.5,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [
        "run_webhook_endpoint_analyzer"
      ],
      "dependencies": [
        "re",
        "datetime",
        "pathlib",
        "os",
        "typing",
        "json"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-error-detection-frame.cjs",
      "file_path": "scripts\\enhanced-error-detection-frame.cjs",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:58.885627",
      "functionality_score": 55.0,
      "documentation_score": 15.028063610851262,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "error-detection-frame.js",
      "file_path": "scripts\\error-detection-frame.js",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:58.966545",
      "functionality_score": 55.0,
      "documentation_score": 15.062630480167014,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "frame-optimizer.py",
      "file_path": "scripts\\frame-optimizer.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:13:59.029641",
      "functionality_score": 45.0,
      "documentation_score": 16.142857142857142,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [
        {
          "type": "error_handling",
          "description": "Missing error handling in functions",
          "severity": "high"
        },
        {
          "type": "documentation",
          "description": "Missing function documentation",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "pathlib",
        "os",
        "typing",
        "json"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "framework-validation.js",
      "file_path": "scripts\\framework-validation.js",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-12T18:13:59.077576",
      "functionality_score": 0.0,
      "documentation_score": 0.0,
      "integration_score": 0.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "autonomous-framework-v2.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-12T18:17:56.403346",
      "functionality_score": 85.0,
      "documentation_score": 51.858707971288254,
      "integration_score": 100.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "shutil",
        "traceback",
        "re",
        "time",
        "datetime",
        "pathlib",
        "enum",
        "sys",
        "os",
        "urllib",
        "json",
        "tempfile",
        "typing",
        "dataclasses",
        "subprocess",
        "importlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "autonomous-framework.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-12T18:17:56.629275",
      "functionality_score": 85.0,
      "documentation_score": 51.38977635782747,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "traceback",
        "time",
        "datetime",
        "pathlib",
        "enum",
        "sys",
        "os",
        "json",
        "typing",
        "dataclasses",
        "subprocess",
        "importlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:56.702758",
      "functionality_score": 100.0,
      "documentation_score": 36.54373927958834,
      "integration_score": 65.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 484
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "time",
        "datetime",
        "pathlib",
        "enum",
        "json",
        "typing",
        "dataclasses",
        "subprocess",
        "threading",
        "logging"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "comprehensive-frame-analyzer.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:17:56.781695",
      "functionality_score": 100.0,
      "documentation_score": 52.62969588550984,
      "integration_score": 100.0,
      "risks": [
        {
          "type": "performance",
          "level": "medium",
          "description": "Potential performance issue with large loops",
          "line": 7
        },
        {
          "type": "dependency",
          "level": "medium",
          "description": "Wildcard import - potential namespace pollution",
          "line": 435
        }
      ],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [
        "_identify_pre_hooks"
      ],
      "post_hooks": [
        "_identify_post_hooks"
      ],
      "webhooks": [
        "_identify_pre_hooks",
        "_identify_post_hooks",
        "_identify_webhooks"
      ],
      "dependencies": [
        "glob",
        "datetime",
        "enum",
        "sys",
        "inspect",
        "ast",
        "os",
        "json",
        "typing",
        "dataclasses",
        "subprocess",
        "importlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "cross-agent-communication-protocol-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:56.870308",
      "functionality_score": 85.0,
      "documentation_score": 37.161572052401745,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "uuid",
        "time",
        "datetime",
        "pathlib",
        "enum",
        "json",
        "typing",
        "dataclasses",
        "queue",
        "asyncio",
        "threading",
        "logging"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "deep-pattern-recognition-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:57.028170",
      "functionality_score": 75.0,
      "documentation_score": 37.24696356275304,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "traceback",
        "datetime",
        "pathlib",
        "sys",
        "os",
        "json",
        "typing",
        "collections"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:57.085308",
      "functionality_score": 75.0,
      "documentation_score": 35.29469548133595,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "datetime",
        "pathlib",
        "enum",
        "concurrent",
        "json",
        "typing",
        "dataclasses",
        "subprocess",
        "logging"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "existence-check-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:57.147957",
      "functionality_score": 85.0,
      "documentation_score": 36.68,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "glob",
        "datetime",
        "sys",
        "os",
        "json",
        "typing",
        "dataclasses"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filesystem-discovery-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:57.212409",
      "functionality_score": 55.0,
      "documentation_score": 35.54545454545455,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "pathlib",
        "typing",
        "json",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filetree-organizer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:57.257718",
      "functionality_score": 65.0,
      "documentation_score": 36.339285714285715,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "shutil",
        "datetime",
        "pathlib",
        "json",
        "typing"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-intelligence-system.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
      "category": "intelligence",
      "analysis_timestamp": "2025-08-12T18:17:57.316823",
      "functionality_score": 75.0,
      "documentation_score": 36.757656458055926,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: expected 'except' or 'finally' block (<unknown>, line 547)",
          "line": 547,
          "severity": "critical"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: universal_task_orchestrator",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "research_information_frame",
        "datetime",
        "existence_check_frame",
        "enum",
        "sys",
        "os",
        "json",
        "typing",
        "dataclasses",
        "subprocess",
        "universal_task_orchestrator"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: expected 'except' or 'finally' block (<unknown>, line 547)",
        "Resolve blocker: Missing module: universal_task_orchestrator",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "frame-rationalization-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:17:57.435761",
      "functionality_score": 75.0,
      "documentation_score": 37.11267605633803,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "datetime",
        "pathlib",
        "enum",
        "json",
        "typing",
        "dataclasses",
        "logging"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "human-approval-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:57.507075",
      "functionality_score": 75.0,
      "documentation_score": 37.201834862385326,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "traceback",
        "datetime",
        "pathlib",
        "sys",
        "os",
        "json",
        "typing"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "import-dependency-graph-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:57.574581",
      "functionality_score": 55.0,
      "documentation_score": 35.46153846153846,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "datetime",
        "pathlib",
        "json",
        "typing"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "improvement-optimization-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:57.623330",
      "functionality_score": 55.0,
      "documentation_score": 36.504702194357364,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "traceback",
        "datetime",
        "pathlib",
        "sys",
        "os",
        "json",
        "typing",
        "subprocess"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "index-registrar-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:57.732407",
      "functionality_score": 55.0,
      "documentation_score": 35.625,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "pathlib",
        "typing",
        "json",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "intelligent-caching-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:57.819741",
      "functionality_score": 100.0,
      "documentation_score": 52.123893805309734,
      "integration_score": 70.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 42
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [
        "cleanup_expired",
        "cleanup"
      ],
      "webhooks": [],
      "dependencies": [
        "shutil",
        "traceback",
        "time",
        "datetime",
        "pathlib",
        "sys",
        "os",
        "json",
        "hashlib",
        "typing",
        "collections"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "knowledge-hub-update-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:57.930742",
      "functionality_score": 75.0,
      "documentation_score": 36.687979539641944,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "traceback",
        "datetime",
        "pathlib",
        "sys",
        "os",
        "json",
        "hashlib",
        "typing"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "log-tailer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:58.028932",
      "functionality_score": 55.0,
      "documentation_score": 36.0948905109489,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "traceback",
        "time",
        "datetime",
        "pathlib",
        "sys",
        "os",
        "json",
        "typing",
        "subprocess"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "meta-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:17:58.088399",
      "functionality_score": 75.0,
      "documentation_score": 36.83333333333333,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "traceback",
        "datetime",
        "pathlib",
        "sys",
        "os",
        "json",
        "typing",
        "collections"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "parallel-execution-coordinator-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:58.158617",
      "functionality_score": 75.0,
      "documentation_score": 37.046908315565034,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "traceback",
        "time",
        "datetime",
        "pathlib",
        "sys",
        "concurrent",
        "os",
        "json",
        "typing",
        "dataclasses",
        "queue",
        "threading",
        "importlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "predictive-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:17:58.233299",
      "functionality_score": 85.0,
      "documentation_score": 37.28476821192053,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "traceback",
        "datetime",
        "pathlib",
        "sys",
        "statistics",
        "os",
        "json",
        "typing",
        "collections"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "real-time-monitoring-dashboard-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
      "category": "diagnostic",
      "analysis_timestamp": "2025-08-12T18:17:58.335522",
      "functionality_score": 85.0,
      "documentation_score": 36.91897654584221,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "psutil",
        "time",
        "datetime",
        "pathlib",
        "threading",
        "json",
        "typing",
        "dataclasses",
        "asyncio",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "research-information-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
      "category": "research",
      "analysis_timestamp": "2025-08-12T18:17:58.433509",
      "functionality_score": 75.0,
      "documentation_score": 37.24924012158055,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "research_chain",
          "description": "Can be enhanced with pattern recognition and synergy analysis",
          "related_frames": [
            "deep-pattern-recognition-frame.py",
            "synergy-analyzer.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "glob",
        "datetime",
        "sys",
        "os",
        "json",
        "typing",
        "dataclasses"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "resource-allocation-engine-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:58.561979",
      "functionality_score": 85.0,
      "documentation_score": 37.5,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "uuid",
        "psutil",
        "time",
        "datetime",
        "pathlib",
        "enum",
        "json",
        "typing",
        "dataclasses",
        "queue",
        "threading",
        "logging"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "security-audit-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
      "category": "security",
      "analysis_timestamp": "2025-08-12T18:17:58.657961",
      "functionality_score": 85.0,
      "documentation_score": 36.65289256198347,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "security_chain",
          "description": "Can be chained with other security frames for comprehensive audit",
          "related_frames": [
            "security-audit-frame.py",
            "risk-assessment-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "sys",
        "json",
        "typing",
        "dataclasses"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "self-healing-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:58.774210",
      "functionality_score": 75.0,
      "documentation_score": 36.25226860254084,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "traceback",
        "time",
        "datetime",
        "pathlib",
        "sys",
        "os",
        "json",
        "typing",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "universal-task-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-12T18:17:58.883575",
      "functionality_score": 75.0,
      "documentation_score": 37.01877934272301,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: expected an indented block after 'try' statement on line 368 (<unknown>, line 369)",
          "line": 369,
          "severity": "critical"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: security_audit_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "research_information_frame",
        "datetime",
        "existence_check_frame",
        "security_audit_frame",
        "enum",
        "sys",
        "os",
        "json",
        "typing",
        "dataclasses",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: expected an indented block after 'try' statement on line 368 (<unknown>, line 369)",
        "Resolve blocker: Missing module: existence_check_frame",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: security_audit_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "webhook-endpoint-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:17:58.980656",
      "functionality_score": 55.0,
      "documentation_score": 36.5,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [
        "run_webhook_endpoint_analyzer"
      ],
      "dependencies": [
        "re",
        "datetime",
        "pathlib",
        "os",
        "json",
        "typing"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-error-detection-frame.cjs",
      "file_path": "scripts\\enhanced-error-detection-frame.cjs",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:59.043298",
      "functionality_score": 55.0,
      "documentation_score": 15.028063610851262,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "error-detection-frame.js",
      "file_path": "scripts\\error-detection-frame.js",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:59.152456",
      "functionality_score": 55.0,
      "documentation_score": 15.062630480167014,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "frame-optimizer.py",
      "file_path": "scripts\\frame-optimizer.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:17:59.230069",
      "functionality_score": 45.0,
      "documentation_score": 16.142857142857142,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [
        {
          "type": "error_handling",
          "description": "Missing error handling in functions",
          "severity": "high"
        },
        {
          "type": "documentation",
          "description": "Missing function documentation",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "pathlib",
        "os",
        "json",
        "typing"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "framework-validation.js",
      "file_path": "scripts\\framework-validation.js",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-12T18:17:59.294502",
      "functionality_score": 0.0,
      "documentation_score": 0.0,
      "integration_score": 0.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "autonomous-framework-v2.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-12T18:35:37.244374",
      "functionality_score": 85.0,
      "documentation_score": 51.858707971288254,
      "integration_score": 100.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "urllib",
        "time",
        "shutil",
        "subprocess",
        "typing",
        "sys",
        "json",
        "dataclasses",
        "pathlib",
        "traceback",
        "re",
        "importlib",
        "datetime",
        "tempfile",
        "enum",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "autonomous-framework.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-12T18:35:37.530765",
      "functionality_score": 85.0,
      "documentation_score": 51.38977635782747,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "subprocess",
        "typing",
        "sys",
        "json",
        "dataclasses",
        "pathlib",
        "traceback",
        "importlib",
        "datetime",
        "enum",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:37.607088",
      "functionality_score": 100.0,
      "documentation_score": 36.54373927958834,
      "integration_score": 65.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 484
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "subprocess",
        "typing",
        "json",
        "dataclasses",
        "pathlib",
        "logging",
        "re",
        "datetime",
        "threading",
        "enum"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "comprehensive-frame-analyzer.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:35:37.680542",
      "functionality_score": 100.0,
      "documentation_score": 52.62969588550984,
      "integration_score": 100.0,
      "risks": [
        {
          "type": "performance",
          "level": "medium",
          "description": "Potential performance issue with large loops",
          "line": 7
        },
        {
          "type": "dependency",
          "level": "medium",
          "description": "Wildcard import - potential namespace pollution",
          "line": 435
        }
      ],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [
        "_identify_pre_hooks"
      ],
      "post_hooks": [
        "_identify_post_hooks"
      ],
      "webhooks": [
        "_identify_pre_hooks",
        "_identify_post_hooks",
        "_identify_webhooks"
      ],
      "dependencies": [
        "inspect",
        "subprocess",
        "typing",
        "sys",
        "json",
        "dataclasses",
        "glob",
        "importlib",
        "ast",
        "datetime",
        "enum",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "cross-agent-communication-protocol-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:37.776932",
      "functionality_score": 85.0,
      "documentation_score": 37.161572052401745,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "asyncio",
        "typing",
        "json",
        "dataclasses",
        "uuid",
        "pathlib",
        "logging",
        "queue",
        "datetime",
        "threading",
        "enum"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "deep-pattern-recognition-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:38.090008",
      "functionality_score": 75.0,
      "documentation_score": 37.24696356275304,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "collections",
        "typing",
        "sys",
        "json",
        "pathlib",
        "traceback",
        "re",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:38.157619",
      "functionality_score": 75.0,
      "documentation_score": 35.29469548133595,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "subprocess",
        "typing",
        "json",
        "dataclasses",
        "pathlib",
        "logging",
        "concurrent",
        "datetime",
        "enum"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "existence-check-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:38.237967",
      "functionality_score": 85.0,
      "documentation_score": 36.68,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "typing",
        "sys",
        "json",
        "dataclasses",
        "glob",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filesystem-discovery-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:38.311697",
      "functionality_score": 55.0,
      "documentation_score": 35.54545454545455,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "typing",
        "json",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filetree-organizer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:38.365827",
      "functionality_score": 65.0,
      "documentation_score": 36.339285714285715,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "shutil",
        "typing",
        "json",
        "pathlib",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-intelligence-system.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
      "category": "intelligence",
      "analysis_timestamp": "2025-08-12T18:35:38.419186",
      "functionality_score": 75.0,
      "documentation_score": 36.72690763052209,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: universal_task_orchestrator",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "subprocess",
        "typing",
        "sys",
        "json",
        "dataclasses",
        "universal_task_orchestrator",
        "research_information_frame",
        "existence_check_frame",
        "datetime",
        "enum",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: universal_task_orchestrator",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "frame-rationalization-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:35:38.510292",
      "functionality_score": 75.0,
      "documentation_score": 37.11267605633803,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "typing",
        "json",
        "dataclasses",
        "pathlib",
        "logging",
        "datetime",
        "enum"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "human-approval-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:38.587017",
      "functionality_score": 75.0,
      "documentation_score": 37.201834862385326,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "typing",
        "sys",
        "json",
        "pathlib",
        "traceback",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "import-dependency-graph-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:38.649869",
      "functionality_score": 55.0,
      "documentation_score": 35.46153846153846,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "typing",
        "json",
        "pathlib",
        "re",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "improvement-optimization-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:38.703674",
      "functionality_score": 55.0,
      "documentation_score": 36.504702194357364,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "subprocess",
        "typing",
        "sys",
        "json",
        "pathlib",
        "traceback",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "index-registrar-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:38.767797",
      "functionality_score": 55.0,
      "documentation_score": 35.625,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "typing",
        "json",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "intelligent-caching-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:38.817547",
      "functionality_score": 100.0,
      "documentation_score": 52.123893805309734,
      "integration_score": 70.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 42
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [
        "cleanup_expired",
        "cleanup"
      ],
      "webhooks": [],
      "dependencies": [
        "collections",
        "time",
        "hashlib",
        "shutil",
        "typing",
        "sys",
        "json",
        "pathlib",
        "traceback",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "knowledge-hub-update-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:38.930859",
      "functionality_score": 75.0,
      "documentation_score": 36.687979539641944,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "hashlib",
        "typing",
        "sys",
        "json",
        "pathlib",
        "traceback",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "log-tailer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:39.009344",
      "functionality_score": 55.0,
      "documentation_score": 36.0948905109489,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "subprocess",
        "typing",
        "sys",
        "json",
        "pathlib",
        "traceback",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "meta-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:35:39.071077",
      "functionality_score": 75.0,
      "documentation_score": 36.83333333333333,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "collections",
        "typing",
        "sys",
        "json",
        "pathlib",
        "traceback",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "parallel-execution-coordinator-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:39.153515",
      "functionality_score": 75.0,
      "documentation_score": 37.046908315565034,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "typing",
        "sys",
        "json",
        "dataclasses",
        "pathlib",
        "traceback",
        "importlib",
        "queue",
        "concurrent",
        "datetime",
        "threading",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "predictive-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:35:39.226458",
      "functionality_score": 85.0,
      "documentation_score": 37.28476821192053,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "collections",
        "typing",
        "sys",
        "json",
        "pathlib",
        "traceback",
        "statistics",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "real-time-monitoring-dashboard-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
      "category": "diagnostic",
      "analysis_timestamp": "2025-08-12T18:35:39.354907",
      "functionality_score": 85.0,
      "documentation_score": 36.91897654584221,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "asyncio",
        "subprocess",
        "typing",
        "json",
        "dataclasses",
        "pathlib",
        "psutil",
        "datetime",
        "threading"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "research-information-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
      "category": "research",
      "analysis_timestamp": "2025-08-12T18:35:39.500213",
      "functionality_score": 75.0,
      "documentation_score": 37.24924012158055,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "research_chain",
          "description": "Can be enhanced with pattern recognition and synergy analysis",
          "related_frames": [
            "deep-pattern-recognition-frame.py",
            "synergy-analyzer.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "typing",
        "sys",
        "json",
        "dataclasses",
        "glob",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "resource-allocation-engine-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:39.630433",
      "functionality_score": 85.0,
      "documentation_score": 37.5,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "typing",
        "json",
        "dataclasses",
        "uuid",
        "pathlib",
        "psutil",
        "logging",
        "queue",
        "datetime",
        "threading",
        "enum"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "security-audit-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
      "category": "security",
      "analysis_timestamp": "2025-08-12T18:35:39.712464",
      "functionality_score": 85.0,
      "documentation_score": 36.65289256198347,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "security_chain",
          "description": "Can be chained with other security frames for comprehensive audit",
          "related_frames": [
            "security-audit-frame.py",
            "risk-assessment-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "typing",
        "sys",
        "json",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "self-healing-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:39.807211",
      "functionality_score": 75.0,
      "documentation_score": 36.25226860254084,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "subprocess",
        "typing",
        "sys",
        "json",
        "pathlib",
        "traceback",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "universal-task-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-12T18:35:39.897242",
      "functionality_score": 75.0,
      "documentation_score": 37.01877934272301,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: security_audit_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "subprocess",
        "security_audit_frame",
        "typing",
        "sys",
        "json",
        "dataclasses",
        "research_information_frame",
        "existence_check_frame",
        "datetime",
        "enum",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: existence_check_frame",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: security_audit_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "webhook-endpoint-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-12T18:35:40.000557",
      "functionality_score": 55.0,
      "documentation_score": 36.5,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [
        "run_webhook_endpoint_analyzer"
      ],
      "dependencies": [
        "typing",
        "json",
        "pathlib",
        "re",
        "datetime",
        "os"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-error-detection-frame.cjs",
      "file_path": "scripts\\enhanced-error-detection-frame.cjs",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:40.077974",
      "functionality_score": 55.0,
      "documentation_score": 15.028063610851262,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "error-detection-frame.js",
      "file_path": "scripts\\error-detection-frame.js",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:40.200836",
      "functionality_score": 55.0,
      "documentation_score": 15.062630480167014,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "frame-optimizer.py",
      "file_path": "scripts\\frame-optimizer.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-12T18:35:40.291590",
      "functionality_score": 45.0,
      "documentation_score": 16.142857142857142,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [
        {
          "type": "error_handling",
          "description": "Missing error handling in functions",
          "severity": "high"
        },
        {
          "type": "documentation",
          "description": "Missing function documentation",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "typing",
        "json",
        "pathlib",
        "re",
        "os"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "framework-validation.js",
      "file_path": "scripts\\framework-validation.js",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-12T18:35:40.361852",
      "functionality_score": 0.0,
      "documentation_score": 0.0,
      "integration_score": 0.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "autonomous-framework-v2.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T10:15:05.274587",
      "functionality_score": 85.0,
      "documentation_score": 51.858707971288254,
      "integration_score": 100.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "dataclasses",
        "time",
        "re",
        "json",
        "typing",
        "urllib",
        "sys",
        "os",
        "pathlib",
        "shutil",
        "datetime",
        "importlib",
        "tempfile",
        "traceback",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "autonomous-framework.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T10:15:05.611883",
      "functionality_score": 85.0,
      "documentation_score": 51.38977635782747,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "dataclasses",
        "time",
        "json",
        "typing",
        "sys",
        "os",
        "pathlib",
        "datetime",
        "importlib",
        "traceback",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:05.716451",
      "functionality_score": 100.0,
      "documentation_score": 36.54373927958834,
      "integration_score": 65.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 484
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "dataclasses",
        "time",
        "logging",
        "re",
        "json",
        "typing",
        "pathlib",
        "datetime",
        "threading",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "comprehensive-documentation-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:05.819420",
      "functionality_score": 85.0,
      "documentation_score": 53.00867888138862,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "inspect",
        "dataclasses",
        "enum",
        "re",
        "json",
        "glob",
        "typing",
        "sys",
        "os",
        "ast",
        "pathlib",
        "datetime",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-frame-analyzer.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T10:15:05.957795",
      "functionality_score": 100.0,
      "documentation_score": 52.62969588550984,
      "integration_score": 100.0,
      "risks": [
        {
          "type": "performance",
          "level": "medium",
          "description": "Potential performance issue with large loops",
          "line": 7
        },
        {
          "type": "dependency",
          "level": "medium",
          "description": "Wildcard import - potential namespace pollution",
          "line": 435
        }
      ],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [
        "_identify_pre_hooks"
      ],
      "post_hooks": [
        "_identify_post_hooks"
      ],
      "webhooks": [
        "_identify_pre_hooks",
        "_identify_post_hooks",
        "_identify_webhooks"
      ],
      "dependencies": [
        "inspect",
        "dataclasses",
        "enum",
        "json",
        "glob",
        "typing",
        "sys",
        "os",
        "ast",
        "datetime",
        "importlib",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "cross-agent-communication-protocol-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:06.104078",
      "functionality_score": 85.0,
      "documentation_score": 37.161572052401745,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "dataclasses",
        "time",
        "uuid",
        "queue",
        "json",
        "typing",
        "pathlib",
        "datetime",
        "asyncio",
        "threading",
        "logging"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "deep-pattern-recognition-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:06.493276",
      "functionality_score": 75.0,
      "documentation_score": 37.24696356275304,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "json",
        "typing",
        "sys",
        "os",
        "collections",
        "pathlib",
        "datetime",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:06.630255",
      "functionality_score": 75.0,
      "documentation_score": 35.29469548133595,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "dataclasses",
        "time",
        "logging",
        "json",
        "typing",
        "pathlib",
        "datetime",
        "concurrent",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "existence-check-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:06.809206",
      "functionality_score": 85.0,
      "documentation_score": 36.68,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "dataclasses",
        "json",
        "glob",
        "typing",
        "sys",
        "os",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filesystem-discovery-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:06.954019",
      "functionality_score": 55.0,
      "documentation_score": 35.54545454545455,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "pathlib",
        "typing",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filetree-organizer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:07.036003",
      "functionality_score": 65.0,
      "documentation_score": 36.339285714285715,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "pathlib",
        "shutil",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-intelligence-system.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
      "category": "intelligence",
      "analysis_timestamp": "2025-08-13T10:15:07.124247",
      "functionality_score": 75.0,
      "documentation_score": 36.72690763052209,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: universal_task_orchestrator",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "dataclasses",
        "universal_task_orchestrator",
        "research_information_frame",
        "existence_check_frame",
        "json",
        "typing",
        "sys",
        "os",
        "datetime",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: universal_task_orchestrator",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "frame-rationalization-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T10:15:07.270580",
      "functionality_score": 75.0,
      "documentation_score": 37.11267605633803,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "dataclasses",
        "time",
        "json",
        "typing",
        "pathlib",
        "datetime",
        "logging"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "human-approval-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:07.404412",
      "functionality_score": 75.0,
      "documentation_score": 37.201834862385326,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "sys",
        "os",
        "pathlib",
        "datetime",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "hybrid-documentation-tauri-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T10:15:07.511417",
      "functionality_score": 85.0,
      "documentation_score": 35.92511013215859,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "dataclasses",
        "json",
        "typing",
        "sys",
        "os",
        "pathlib",
        "shutil",
        "datetime",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "import-dependency-graph-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:07.650740",
      "functionality_score": 55.0,
      "documentation_score": 35.46153846153846,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "json",
        "typing",
        "pathlib",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "improvement-optimization-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:07.733994",
      "functionality_score": 55.0,
      "documentation_score": 36.504702194357364,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "sys",
        "os",
        "pathlib",
        "datetime",
        "traceback",
        "subprocess"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "index-registrar-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:07.840752",
      "functionality_score": 55.0,
      "documentation_score": 35.625,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "pathlib",
        "typing",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "intelligent-caching-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:07.910354",
      "functionality_score": 100.0,
      "documentation_score": 52.123893805309734,
      "integration_score": 70.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 42
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [
        "cleanup_expired",
        "cleanup"
      ],
      "webhooks": [],
      "dependencies": [
        "time",
        "json",
        "hashlib",
        "typing",
        "sys",
        "os",
        "collections",
        "pathlib",
        "shutil",
        "datetime",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "knowledge-hub-update-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:08.067435",
      "functionality_score": 75.0,
      "documentation_score": 36.687979539641944,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "hashlib",
        "typing",
        "sys",
        "os",
        "pathlib",
        "datetime",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "log-tailer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:08.196586",
      "functionality_score": 55.0,
      "documentation_score": 36.0948905109489,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "json",
        "typing",
        "sys",
        "os",
        "pathlib",
        "datetime",
        "traceback",
        "subprocess"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "meta-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T10:15:08.298737",
      "functionality_score": 75.0,
      "documentation_score": 36.83333333333333,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "sys",
        "os",
        "collections",
        "pathlib",
        "datetime",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "parallel-execution-coordinator-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:08.429052",
      "functionality_score": 75.0,
      "documentation_score": 37.046908315565034,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "queue",
        "dataclasses",
        "time",
        "json",
        "typing",
        "sys",
        "os",
        "pathlib",
        "datetime",
        "importlib",
        "concurrent",
        "threading",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "predictive-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T10:15:08.557951",
      "functionality_score": 85.0,
      "documentation_score": 37.28476821192053,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "sys",
        "os",
        "collections",
        "pathlib",
        "statistics",
        "datetime",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "real-time-monitoring-dashboard-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
      "category": "diagnostic",
      "analysis_timestamp": "2025-08-13T10:15:08.763617",
      "functionality_score": 85.0,
      "documentation_score": 36.91897654584221,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "dataclasses",
        "time",
        "json",
        "psutil",
        "typing",
        "pathlib",
        "datetime",
        "asyncio",
        "threading",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "research-information-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
      "category": "research",
      "analysis_timestamp": "2025-08-13T10:15:08.932833",
      "functionality_score": 75.0,
      "documentation_score": 37.24924012158055,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "research_chain",
          "description": "Can be enhanced with pattern recognition and synergy analysis",
          "related_frames": [
            "deep-pattern-recognition-frame.py",
            "synergy-analyzer.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "dataclasses",
        "json",
        "glob",
        "typing",
        "sys",
        "os",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "resource-allocation-engine-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:09.128272",
      "functionality_score": 85.0,
      "documentation_score": 37.5,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "dataclasses",
        "time",
        "uuid",
        "queue",
        "json",
        "psutil",
        "typing",
        "pathlib",
        "datetime",
        "threading",
        "logging"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "security-audit-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
      "category": "security",
      "analysis_timestamp": "2025-08-13T10:15:09.271032",
      "functionality_score": 85.0,
      "documentation_score": 36.65289256198347,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "security_chain",
          "description": "Can be chained with other security frames for comprehensive audit",
          "related_frames": [
            "security-audit-frame.py",
            "risk-assessment-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "dataclasses",
        "json",
        "typing",
        "sys",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "self-healing-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:09.442847",
      "functionality_score": 75.0,
      "documentation_score": 36.25226860254084,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "json",
        "typing",
        "sys",
        "os",
        "pathlib",
        "datetime",
        "traceback",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "universal-task-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T10:15:09.573425",
      "functionality_score": 75.0,
      "documentation_score": 37.01877934272301,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: security_audit_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "dataclasses",
        "research_information_frame",
        "existence_check_frame",
        "json",
        "typing",
        "sys",
        "os",
        "security_audit_frame",
        "datetime",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: existence_check_frame",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: security_audit_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "webhook-endpoint-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T10:15:09.742954",
      "functionality_score": 55.0,
      "documentation_score": 36.5,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [
        "run_webhook_endpoint_analyzer"
      ],
      "dependencies": [
        "re",
        "json",
        "typing",
        "os",
        "pathlib",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-error-detection-frame.cjs",
      "file_path": "scripts\\enhanced-error-detection-frame.cjs",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:09.851637",
      "functionality_score": 55.0,
      "documentation_score": 15.028063610851262,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "error-detection-frame.js",
      "file_path": "scripts\\error-detection-frame.js",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:10.029608",
      "functionality_score": 55.0,
      "documentation_score": 15.062630480167014,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "frame-optimizer.py",
      "file_path": "scripts\\frame-optimizer.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:15:10.165539",
      "functionality_score": 45.0,
      "documentation_score": 16.142857142857142,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [
        {
          "type": "error_handling",
          "description": "Missing error handling in functions",
          "severity": "high"
        },
        {
          "type": "documentation",
          "description": "Missing function documentation",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "json",
        "typing",
        "os",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "framework-validation.js",
      "file_path": "scripts\\framework-validation.js",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T10:15:10.268391",
      "functionality_score": 0.0,
      "documentation_score": 0.0,
      "integration_score": 0.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "autonomous-framework-v2.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T10:16:36.883636",
      "functionality_score": 85.0,
      "documentation_score": 51.858707971288254,
      "integration_score": 100.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "urllib",
        "subprocess",
        "json",
        "tempfile",
        "datetime",
        "typing",
        "sys",
        "dataclasses",
        "os",
        "enum",
        "shutil",
        "re",
        "pathlib",
        "traceback",
        "time",
        "importlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "autonomous-framework.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T10:16:37.250540",
      "functionality_score": 85.0,
      "documentation_score": 51.38977635782747,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "subprocess",
        "json",
        "datetime",
        "typing",
        "sys",
        "dataclasses",
        "os",
        "enum",
        "pathlib",
        "traceback",
        "time",
        "importlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:37.381352",
      "functionality_score": 100.0,
      "documentation_score": 36.54373927958834,
      "integration_score": 65.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 484
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "subprocess",
        "json",
        "logging",
        "datetime",
        "threading",
        "typing",
        "enum",
        "dataclasses",
        "re",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "comprehensive-documentation-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:37.511747",
      "functionality_score": 85.0,
      "documentation_score": 53.00867888138862,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "glob",
        "json",
        "subprocess",
        "inspect",
        "datetime",
        "typing",
        "sys",
        "re",
        "os",
        "dataclasses",
        "ast",
        "enum",
        "pathlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-frame-analyzer.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T10:16:37.688462",
      "functionality_score": 100.0,
      "documentation_score": 52.62969588550984,
      "integration_score": 100.0,
      "risks": [
        {
          "type": "performance",
          "level": "medium",
          "description": "Potential performance issue with large loops",
          "line": 7
        },
        {
          "type": "dependency",
          "level": "medium",
          "description": "Wildcard import - potential namespace pollution",
          "line": 435
        }
      ],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [
        "_identify_pre_hooks"
      ],
      "post_hooks": [
        "_identify_post_hooks"
      ],
      "webhooks": [
        "_identify_pre_hooks",
        "_identify_post_hooks",
        "_identify_webhooks"
      ],
      "dependencies": [
        "glob",
        "json",
        "subprocess",
        "inspect",
        "datetime",
        "typing",
        "sys",
        "dataclasses",
        "os",
        "enum",
        "ast",
        "importlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "cross-agent-communication-protocol-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:37.881095",
      "functionality_score": 85.0,
      "documentation_score": 37.161572052401745,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "logging",
        "datetime",
        "threading",
        "asyncio",
        "typing",
        "uuid",
        "enum",
        "dataclasses",
        "pathlib",
        "time",
        "queue"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "deep-pattern-recognition-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:38.094321",
      "functionality_score": 75.0,
      "documentation_score": 37.24696356275304,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "datetime",
        "typing",
        "re",
        "sys",
        "os",
        "collections",
        "pathlib",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:38.212997",
      "functionality_score": 75.0,
      "documentation_score": 35.29469548133595,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "subprocess",
        "json",
        "logging",
        "concurrent",
        "datetime",
        "typing",
        "enum",
        "dataclasses",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "existence-check-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:38.339996",
      "functionality_score": 85.0,
      "documentation_score": 36.68,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "glob",
        "json",
        "datetime",
        "typing",
        "sys",
        "dataclasses",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filesystem-discovery-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:38.464602",
      "functionality_score": 55.0,
      "documentation_score": 35.54545454545455,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "typing",
        "pathlib",
        "json"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filetree-organizer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:38.546151",
      "functionality_score": 65.0,
      "documentation_score": 36.339285714285715,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "datetime",
        "typing",
        "shutil",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-intelligence-system.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
      "category": "intelligence",
      "analysis_timestamp": "2025-08-13T10:16:38.638446",
      "functionality_score": 75.0,
      "documentation_score": 36.72690763052209,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: universal_task_orchestrator",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "subprocess",
        "universal_task_orchestrator",
        "research_information_frame",
        "datetime",
        "typing",
        "sys",
        "dataclasses",
        "os",
        "enum",
        "existence_check_frame"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: universal_task_orchestrator",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "frame-rationalization-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T10:16:38.798594",
      "functionality_score": 75.0,
      "documentation_score": 37.11267605633803,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "logging",
        "datetime",
        "typing",
        "enum",
        "dataclasses",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "human-approval-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:38.923327",
      "functionality_score": 75.0,
      "documentation_score": 37.201834862385326,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "datetime",
        "typing",
        "sys",
        "os",
        "pathlib",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "hybrid-documentation-tauri-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T10:16:39.035921",
      "functionality_score": 85.0,
      "documentation_score": 35.92511013215859,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "subprocess",
        "datetime",
        "typing",
        "sys",
        "dataclasses",
        "os",
        "enum",
        "shutil",
        "pathlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "import-dependency-graph-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:39.190902",
      "functionality_score": 55.0,
      "documentation_score": 35.46153846153846,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "datetime",
        "typing",
        "re",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "improvement-optimization-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:39.277908",
      "functionality_score": 55.0,
      "documentation_score": 36.504702194357364,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "subprocess",
        "datetime",
        "typing",
        "sys",
        "os",
        "pathlib",
        "traceback"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "index-registrar-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:39.390475",
      "functionality_score": 55.0,
      "documentation_score": 35.625,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "typing",
        "pathlib",
        "json"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "intelligent-caching-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:39.487886",
      "functionality_score": 100.0,
      "documentation_score": 52.123893805309734,
      "integration_score": 70.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 42
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [
        "cleanup_expired",
        "cleanup"
      ],
      "webhooks": [],
      "dependencies": [
        "collections",
        "json",
        "hashlib",
        "datetime",
        "typing",
        "sys",
        "os",
        "shutil",
        "pathlib",
        "traceback",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "knowledge-hub-update-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:39.623887",
      "functionality_score": 75.0,
      "documentation_score": 36.687979539641944,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "hashlib",
        "datetime",
        "typing",
        "sys",
        "os",
        "pathlib",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "log-tailer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:39.740926",
      "functionality_score": 55.0,
      "documentation_score": 36.0948905109489,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "subprocess",
        "datetime",
        "typing",
        "sys",
        "os",
        "pathlib",
        "traceback",
        "time"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "meta-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T10:16:39.848992",
      "functionality_score": 75.0,
      "documentation_score": 36.83333333333333,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "datetime",
        "typing",
        "sys",
        "os",
        "collections",
        "pathlib",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "parallel-execution-coordinator-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:39.989971",
      "functionality_score": 75.0,
      "documentation_score": 37.046908315565034,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "concurrent",
        "importlib",
        "datetime",
        "typing",
        "threading",
        "sys",
        "dataclasses",
        "os",
        "pathlib",
        "traceback",
        "time",
        "queue"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "predictive-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T10:16:40.114081",
      "functionality_score": 85.0,
      "documentation_score": 37.28476821192053,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "datetime",
        "typing",
        "statistics",
        "sys",
        "os",
        "collections",
        "pathlib",
        "traceback"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "real-time-monitoring-dashboard-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
      "category": "diagnostic",
      "analysis_timestamp": "2025-08-13T10:16:40.257462",
      "functionality_score": 85.0,
      "documentation_score": 36.91897654584221,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "psutil",
        "json",
        "subprocess",
        "datetime",
        "typing",
        "asyncio",
        "threading",
        "dataclasses",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "research-information-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
      "category": "research",
      "analysis_timestamp": "2025-08-13T10:16:40.421673",
      "functionality_score": 75.0,
      "documentation_score": 37.24924012158055,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "research_chain",
          "description": "Can be enhanced with pattern recognition and synergy analysis",
          "related_frames": [
            "deep-pattern-recognition-frame.py",
            "synergy-analyzer.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "glob",
        "json",
        "datetime",
        "typing",
        "sys",
        "dataclasses",
        "os"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "resource-allocation-engine-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:40.616709",
      "functionality_score": 85.0,
      "documentation_score": 37.5,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "psutil",
        "json",
        "logging",
        "datetime",
        "threading",
        "typing",
        "uuid",
        "enum",
        "dataclasses",
        "pathlib",
        "time",
        "queue"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "security-audit-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
      "category": "security",
      "analysis_timestamp": "2025-08-13T10:16:40.768794",
      "functionality_score": 85.0,
      "documentation_score": 36.65289256198347,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "security_chain",
          "description": "Can be chained with other security frames for comprehensive audit",
          "related_frames": [
            "security-audit-frame.py",
            "risk-assessment-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "datetime",
        "typing",
        "sys",
        "dataclasses"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "self-healing-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:40.930276",
      "functionality_score": 75.0,
      "documentation_score": 36.25226860254084,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "subprocess",
        "datetime",
        "typing",
        "sys",
        "os",
        "pathlib",
        "traceback",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "universal-task-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T10:16:41.095911",
      "functionality_score": 75.0,
      "documentation_score": 37.01877934272301,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: security_audit_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "subprocess",
        "json",
        "research_information_frame",
        "datetime",
        "typing",
        "sys",
        "dataclasses",
        "os",
        "enum",
        "security_audit_frame",
        "existence_check_frame"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: existence_check_frame",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: security_audit_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "webhook-endpoint-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T10:16:41.272909",
      "functionality_score": 55.0,
      "documentation_score": 36.5,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [
        "run_webhook_endpoint_analyzer"
      ],
      "dependencies": [
        "json",
        "datetime",
        "typing",
        "re",
        "os",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-error-detection-frame.cjs",
      "file_path": "scripts\\enhanced-error-detection-frame.cjs",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:41.389867",
      "functionality_score": 55.0,
      "documentation_score": 15.028063610851262,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "error-detection-frame.js",
      "file_path": "scripts\\error-detection-frame.js",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:41.594130",
      "functionality_score": 55.0,
      "documentation_score": 15.062630480167014,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "frame-optimizer.py",
      "file_path": "scripts\\frame-optimizer.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T10:16:41.744464",
      "functionality_score": 45.0,
      "documentation_score": 16.142857142857142,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [
        {
          "type": "error_handling",
          "description": "Missing error handling in functions",
          "severity": "high"
        },
        {
          "type": "documentation",
          "description": "Missing function documentation",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "re",
        "os",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "framework-validation.js",
      "file_path": "scripts\\framework-validation.js",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T10:16:41.848885",
      "functionality_score": 0.0,
      "documentation_score": 0.0,
      "integration_score": 0.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "autonomous-framework-v2.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:28:43.673394",
      "functionality_score": 85.0,
      "documentation_score": 51.858707971288254,
      "integration_score": 100.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "subprocess",
        "datetime",
        "traceback",
        "dataclasses",
        "re",
        "json",
        "shutil",
        "tempfile",
        "enum",
        "importlib",
        "os",
        "urllib",
        "sys",
        "typing",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "autonomous-framework.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:28:44.430503",
      "functionality_score": 85.0,
      "documentation_score": 51.38977635782747,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "subprocess",
        "datetime",
        "traceback",
        "dataclasses",
        "json",
        "enum",
        "importlib",
        "os",
        "sys",
        "typing",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:44.596657",
      "functionality_score": 100.0,
      "documentation_score": 36.54373927958834,
      "integration_score": 65.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 484
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "subprocess",
        "datetime",
        "dataclasses",
        "re",
        "json",
        "enum",
        "threading",
        "typing",
        "logging",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "comprehensive-documentation-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:44.749771",
      "functionality_score": 85.0,
      "documentation_score": 53.00867888138862,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "subprocess",
        "ast",
        "re",
        "dataclasses",
        "json",
        "enum",
        "inspect",
        "os",
        "glob",
        "sys",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-frame-analyzer.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:28:44.980018",
      "functionality_score": 100.0,
      "documentation_score": 52.62969588550984,
      "integration_score": 100.0,
      "risks": [
        {
          "type": "performance",
          "level": "medium",
          "description": "Potential performance issue with large loops",
          "line": 7
        },
        {
          "type": "dependency",
          "level": "medium",
          "description": "Wildcard import - potential namespace pollution",
          "line": 435
        }
      ],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [
        "_identify_pre_hooks"
      ],
      "post_hooks": [
        "_identify_post_hooks"
      ],
      "webhooks": [
        "_identify_pre_hooks",
        "_identify_post_hooks",
        "_identify_webhooks"
      ],
      "dependencies": [
        "datetime",
        "subprocess",
        "ast",
        "dataclasses",
        "json",
        "enum",
        "inspect",
        "importlib",
        "os",
        "glob",
        "sys",
        "typing"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "cross-agent-communication-protocol-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:45.181941",
      "functionality_score": 85.0,
      "documentation_score": 37.161572052401745,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "dataclasses",
        "queue",
        "json",
        "asyncio",
        "enum",
        "threading",
        "uuid",
        "typing",
        "logging",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "deep-pattern-recognition-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:45.567473",
      "functionality_score": 75.0,
      "documentation_score": 37.24696356275304,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "traceback",
        "re",
        "collections",
        "json",
        "os",
        "sys",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:45.718751",
      "functionality_score": 75.0,
      "documentation_score": 35.29469548133595,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "subprocess",
        "datetime",
        "dataclasses",
        "json",
        "enum",
        "concurrent",
        "typing",
        "logging",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "existence-check-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:45.876237",
      "functionality_score": 85.0,
      "documentation_score": 36.68,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "dataclasses",
        "json",
        "os",
        "glob",
        "sys",
        "typing"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filesystem-discovery-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:46.027069",
      "functionality_score": 55.0,
      "documentation_score": 35.54545454545455,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filetree-organizer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:46.127563",
      "functionality_score": 65.0,
      "documentation_score": 36.339285714285715,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "json",
        "shutil",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-intelligence-system.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
      "category": "intelligence",
      "analysis_timestamp": "2025-08-13T11:28:46.229822",
      "functionality_score": 75.0,
      "documentation_score": 36.72690763052209,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: universal_task_orchestrator",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "subprocess",
        "dataclasses",
        "research_information_frame",
        "json",
        "universal_task_orchestrator",
        "enum",
        "os",
        "sys",
        "typing",
        "existence_check_frame"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: universal_task_orchestrator",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "frame-rationalization-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:28:46.402946",
      "functionality_score": 75.0,
      "documentation_score": 37.11267605633803,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "dataclasses",
        "json",
        "enum",
        "typing",
        "logging",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "human-approval-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:46.551570",
      "functionality_score": 75.0,
      "documentation_score": 37.201834862385326,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "traceback",
        "json",
        "os",
        "sys",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "hybrid-documentation-tauri-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T11:28:46.684976",
      "functionality_score": 85.0,
      "documentation_score": 35.92511013215859,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "subprocess",
        "dataclasses",
        "json",
        "shutil",
        "enum",
        "os",
        "sys",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "import-dependency-graph-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:46.865900",
      "functionality_score": 55.0,
      "documentation_score": 35.46153846153846,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "re",
        "json",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "improvement-optimization-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:46.971574",
      "functionality_score": 55.0,
      "documentation_score": 36.504702194357364,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "subprocess",
        "traceback",
        "json",
        "os",
        "sys",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "index-registrar-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:47.112060",
      "functionality_score": 55.0,
      "documentation_score": 35.625,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "intelligent-caching-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:47.216444",
      "functionality_score": 100.0,
      "documentation_score": 52.123893805309734,
      "integration_score": 70.0,
      "risks": [
        {
          "type": "error_handling",
          "level": "high",
          "description": "Bare except clause - may mask important errors",
          "line": 42
        }
      ],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [
        "cleanup_expired",
        "cleanup"
      ],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "traceback",
        "collections",
        "json",
        "shutil",
        "os",
        "hashlib",
        "sys",
        "typing",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": [
        "Address high risk: Bare except clause - may mask important errors"
      ]
    },
    {
      "frame_name": "knowledge-hub-update-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:47.413175",
      "functionality_score": 75.0,
      "documentation_score": 36.687979539641944,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "traceback",
        "json",
        "os",
        "hashlib",
        "sys",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "log-tailer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:47.560350",
      "functionality_score": 55.0,
      "documentation_score": 36.0948905109489,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "traceback",
        "subprocess",
        "json",
        "os",
        "sys",
        "typing",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "meta-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:28:47.672002",
      "functionality_score": 75.0,
      "documentation_score": 36.83333333333333,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "traceback",
        "collections",
        "json",
        "os",
        "sys",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "parallel-execution-coordinator-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:47.820391",
      "functionality_score": 75.0,
      "documentation_score": 37.046908315565034,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "traceback",
        "queue",
        "dataclasses",
        "json",
        "concurrent",
        "importlib",
        "os",
        "threading",
        "sys",
        "typing",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "predictive-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:28:47.994209",
      "functionality_score": 85.0,
      "documentation_score": 37.28476821192053,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "traceback",
        "collections",
        "json",
        "statistics",
        "os",
        "sys",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "real-time-monitoring-dashboard-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
      "category": "diagnostic",
      "analysis_timestamp": "2025-08-13T11:28:48.229886",
      "functionality_score": 85.0,
      "documentation_score": 36.91897654584221,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "subprocess",
        "dataclasses",
        "json",
        "asyncio",
        "psutil",
        "threading",
        "typing",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "research-information-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
      "category": "research",
      "analysis_timestamp": "2025-08-13T11:28:48.444338",
      "functionality_score": 75.0,
      "documentation_score": 37.24924012158055,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "research_chain",
          "description": "Can be enhanced with pattern recognition and synergy analysis",
          "related_frames": [
            "deep-pattern-recognition-frame.py",
            "synergy-analyzer.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "dataclasses",
        "json",
        "os",
        "glob",
        "sys",
        "typing"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "resource-allocation-engine-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:48.699249",
      "functionality_score": 85.0,
      "documentation_score": 37.5,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "dataclasses",
        "queue",
        "json",
        "enum",
        "psutil",
        "threading",
        "uuid",
        "typing",
        "logging",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "security-audit-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
      "category": "security",
      "analysis_timestamp": "2025-08-13T11:28:48.881929",
      "functionality_score": 85.0,
      "documentation_score": 36.65289256198347,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "security_chain",
          "description": "Can be chained with other security frames for comprehensive audit",
          "related_frames": [
            "security-audit-frame.py",
            "risk-assessment-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "dataclasses",
        "json",
        "sys",
        "typing"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "self-healing-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:49.070955",
      "functionality_score": 75.0,
      "documentation_score": 36.25226860254084,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "traceback",
        "subprocess",
        "json",
        "os",
        "sys",
        "typing",
        "pathlib",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "universal-task-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T11:28:49.250919",
      "functionality_score": 75.0,
      "documentation_score": 37.01877934272301,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: research_information_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: security_audit_frame",
          "severity": "high"
        },
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "subprocess",
        "dataclasses",
        "research_information_frame",
        "security_audit_frame",
        "json",
        "enum",
        "os",
        "sys",
        "typing",
        "existence_check_frame"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: existence_check_frame",
        "Resolve blocker: Missing module: research_information_frame",
        "Resolve blocker: Missing module: security_audit_frame",
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "webhook-endpoint-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:28:49.442914",
      "functionality_score": 55.0,
      "documentation_score": 36.5,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [
        "run_webhook_endpoint_analyzer"
      ],
      "dependencies": [
        "datetime",
        "re",
        "json",
        "os",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-error-detection-frame.cjs",
      "file_path": "scripts\\enhanced-error-detection-frame.cjs",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:49.570953",
      "functionality_score": 55.0,
      "documentation_score": 15.028063610851262,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "error-detection-frame.js",
      "file_path": "scripts\\error-detection-frame.js",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:49.806645",
      "functionality_score": 55.0,
      "documentation_score": 15.062630480167014,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "frame-optimizer.py",
      "file_path": "scripts\\frame-optimizer.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:28:49.963821",
      "functionality_score": 45.0,
      "documentation_score": 16.142857142857142,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [
        {
          "type": "error_handling",
          "description": "Missing error handling in functions",
          "severity": "high"
        },
        {
          "type": "documentation",
          "description": "Missing function documentation",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "re",
        "json",
        "os",
        "typing",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "framework-validation.js",
      "file_path": "scripts\\framework-validation.js",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:28:50.085693",
      "functionality_score": 0.0,
      "documentation_score": 0.0,
      "integration_score": 0.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "autonomous-framework-v2.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:35:36.379251",
      "functionality_score": 85.0,
      "documentation_score": 51.858707971288254,
      "integration_score": 100.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "time",
        "pathlib",
        "enum",
        "importlib",
        "traceback",
        "tempfile",
        "json",
        "urllib",
        "re",
        "subprocess",
        "sys",
        "typing",
        "dataclasses",
        "shutil",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "autonomous-framework.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:35:37.315419",
      "functionality_score": 85.0,
      "documentation_score": 51.38977635782747,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "time",
        "pathlib",
        "enum",
        "importlib",
        "traceback",
        "json",
        "subprocess",
        "sys",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:37.537673",
      "functionality_score": 85.0,
      "documentation_score": 36.54373927958834,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "pathlib",
        "enum",
        "json",
        "logging",
        "re",
        "threading",
        "subprocess",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-documentation-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:37.736463",
      "functionality_score": 85.0,
      "documentation_score": 53.00867888138862,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "enum",
        "pathlib",
        "glob",
        "inspect",
        "json",
        "subprocess",
        "sys",
        "ast",
        "re",
        "dataclasses",
        "typing",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-frame-analyzer.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:35:37.984863",
      "functionality_score": 100.0,
      "documentation_score": 52.62969588550984,
      "integration_score": 100.0,
      "risks": [
        {
          "type": "performance",
          "level": "medium",
          "description": "Potential performance issue with large loops",
          "line": 7
        },
        {
          "type": "dependency",
          "level": "medium",
          "description": "Wildcard import - potential namespace pollution",
          "line": 435
        }
      ],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [
        "_identify_pre_hooks"
      ],
      "post_hooks": [
        "_identify_post_hooks"
      ],
      "webhooks": [
        "_identify_pre_hooks",
        "_identify_post_hooks",
        "_identify_webhooks"
      ],
      "dependencies": [
        "os",
        "enum",
        "importlib",
        "inspect",
        "glob",
        "json",
        "subprocess",
        "sys",
        "ast",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "cross-agent-communication-protocol-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:38.230056",
      "functionality_score": 85.0,
      "documentation_score": 37.161572052401745,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "pathlib",
        "enum",
        "json",
        "logging",
        "queue",
        "threading",
        "asyncio",
        "typing",
        "dataclasses",
        "uuid",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "deep-pattern-recognition-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:38.670390",
      "functionality_score": 75.0,
      "documentation_score": 37.24696356275304,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "traceback",
        "json",
        "sys",
        "typing",
        "re",
        "collections",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:38.840277",
      "functionality_score": 75.0,
      "documentation_score": 35.29469548133595,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "pathlib",
        "enum",
        "concurrent",
        "json",
        "logging",
        "subprocess",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "existence-check-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:39.035254",
      "functionality_score": 85.0,
      "documentation_score": 36.68,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "glob",
        "json",
        "sys",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filesystem-discovery-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:39.207856",
      "functionality_score": 55.0,
      "documentation_score": 35.54545454545455,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "pathlib",
        "json",
        "typing",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filetree-organizer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:39.330421",
      "functionality_score": 65.0,
      "documentation_score": 36.339285714285715,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "pathlib",
        "json",
        "typing",
        "shutil",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-intelligence-system.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
      "category": "intelligence",
      "analysis_timestamp": "2025-08-13T11:35:39.465583",
      "functionality_score": 75.0,
      "documentation_score": 36.699604743083,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "enum",
        "importlib",
        "json",
        "subprocess",
        "sys",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-rationalization-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:35:39.685633",
      "functionality_score": 75.0,
      "documentation_score": 37.11267605633803,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "pathlib",
        "enum",
        "json",
        "logging",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "human-approval-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:39.861131",
      "functionality_score": 75.0,
      "documentation_score": 37.201834862385326,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "traceback",
        "json",
        "sys",
        "typing",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "hybrid-documentation-tauri-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T11:35:40.018262",
      "functionality_score": 85.0,
      "documentation_score": 35.92511013215859,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "enum",
        "pathlib",
        "json",
        "subprocess",
        "sys",
        "dataclasses",
        "typing",
        "shutil",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "import-dependency-graph-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:40.247707",
      "functionality_score": 55.0,
      "documentation_score": 35.46153846153846,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "pathlib",
        "json",
        "typing",
        "re",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "improvement-optimization-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:40.382590",
      "functionality_score": 55.0,
      "documentation_score": 36.504702194357364,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "traceback",
        "json",
        "subprocess",
        "sys",
        "typing",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "index-registrar-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:40.547134",
      "functionality_score": 55.0,
      "documentation_score": 35.625,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "pathlib",
        "json",
        "typing",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "intelligent-caching-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:40.668212",
      "functionality_score": 85.0,
      "documentation_score": 52.123893805309734,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [
        "cleanup_expired",
        "cleanup"
      ],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "traceback",
        "time",
        "shutil",
        "json",
        "sys",
        "typing",
        "hashlib",
        "collections",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "knowledge-hub-update-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:40.870386",
      "functionality_score": 75.0,
      "documentation_score": 36.687979539641944,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "traceback",
        "json",
        "sys",
        "typing",
        "hashlib",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "log-tailer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:41.037475",
      "functionality_score": 55.0,
      "documentation_score": 36.0948905109489,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "time",
        "pathlib",
        "traceback",
        "json",
        "subprocess",
        "sys",
        "typing",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "meta-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:35:41.175558",
      "functionality_score": 75.0,
      "documentation_score": 36.83333333333333,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "traceback",
        "json",
        "sys",
        "typing",
        "collections",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "parallel-execution-coordinator-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:41.351781",
      "functionality_score": 75.0,
      "documentation_score": 37.046908315565034,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "traceback",
        "time",
        "importlib",
        "concurrent",
        "json",
        "queue",
        "threading",
        "sys",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "predictive-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:35:41.529804",
      "functionality_score": 85.0,
      "documentation_score": 37.28476821192053,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "traceback",
        "json",
        "sys",
        "typing",
        "statistics",
        "collections",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "real-time-monitoring-dashboard-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
      "category": "diagnostic",
      "analysis_timestamp": "2025-08-13T11:35:41.761360",
      "functionality_score": 85.0,
      "documentation_score": 36.91897654584221,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "pathlib",
        "json",
        "threading",
        "asyncio",
        "subprocess",
        "psutil",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "research-information-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
      "category": "research",
      "analysis_timestamp": "2025-08-13T11:35:41.980421",
      "functionality_score": 75.0,
      "documentation_score": 37.24924012158055,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "research_chain",
          "description": "Can be enhanced with pattern recognition and synergy analysis",
          "related_frames": [
            "deep-pattern-recognition-frame.py",
            "synergy-analyzer.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "glob",
        "json",
        "sys",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "resource-allocation-engine-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:42.250315",
      "functionality_score": 85.0,
      "documentation_score": 37.5,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "time",
        "pathlib",
        "enum",
        "json",
        "logging",
        "queue",
        "threading",
        "psutil",
        "typing",
        "dataclasses",
        "uuid",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "security-audit-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
      "category": "security",
      "analysis_timestamp": "2025-08-13T11:35:42.452525",
      "functionality_score": 85.0,
      "documentation_score": 36.65289256198347,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "security_chain",
          "description": "Can be chained with other security frames for comprehensive audit",
          "related_frames": [
            "security-audit-frame.py",
            "risk-assessment-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "sys",
        "dataclasses",
        "typing",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "self-healing-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:42.661276",
      "functionality_score": 75.0,
      "documentation_score": 36.25226860254084,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "traceback",
        "time",
        "json",
        "subprocess",
        "sys",
        "typing",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "universal-task-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T11:35:42.858113",
      "functionality_score": 75.0,
      "documentation_score": 36.9815668202765,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "enum",
        "importlib",
        "json",
        "subprocess",
        "existence_check_frame",
        "sys",
        "typing",
        "dataclasses",
        "datetime"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "webhook-endpoint-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:35:43.074292",
      "functionality_score": 55.0,
      "documentation_score": 36.5,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [
        "run_webhook_endpoint_analyzer"
      ],
      "dependencies": [
        "os",
        "pathlib",
        "json",
        "typing",
        "re",
        "datetime"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-error-detection-frame.cjs",
      "file_path": "scripts\\enhanced-error-detection-frame.cjs",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:43.214517",
      "functionality_score": 55.0,
      "documentation_score": 15.028063610851262,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "error-detection-frame.js",
      "file_path": "scripts\\error-detection-frame.js",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:43.466698",
      "functionality_score": 55.0,
      "documentation_score": 15.062630480167014,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "frame-optimizer.py",
      "file_path": "scripts\\frame-optimizer.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:35:43.640574",
      "functionality_score": 45.0,
      "documentation_score": 16.142857142857142,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [
        {
          "type": "error_handling",
          "description": "Missing error handling in functions",
          "severity": "high"
        },
        {
          "type": "documentation",
          "description": "Missing function documentation",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "json",
        "typing",
        "re"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "framework-validation.js",
      "file_path": "scripts\\framework-validation.js",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:35:43.781450",
      "functionality_score": 0.0,
      "documentation_score": 0.0,
      "integration_score": 0.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "autonomous-framework-v2.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:37:09.058124",
      "functionality_score": 85.0,
      "documentation_score": 51.858707971288254,
      "integration_score": 100.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "importlib",
        "tempfile",
        "enum",
        "os",
        "subprocess",
        "urllib",
        "json",
        "pathlib",
        "datetime",
        "shutil",
        "dataclasses",
        "traceback",
        "typing",
        "re",
        "sys",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "autonomous-framework.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:37:09.787924",
      "functionality_score": 85.0,
      "documentation_score": 51.38977635782747,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "importlib",
        "enum",
        "os",
        "subprocess",
        "json",
        "pathlib",
        "datetime",
        "dataclasses",
        "traceback",
        "typing",
        "sys",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:10.044439",
      "functionality_score": 85.0,
      "documentation_score": 36.54373927958834,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "logging",
        "enum",
        "subprocess",
        "json",
        "pathlib",
        "threading",
        "datetime",
        "dataclasses",
        "re",
        "typing",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-documentation-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:10.318940",
      "functionality_score": 85.0,
      "documentation_score": 53.00867888138862,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "os",
        "subprocess",
        "json",
        "glob",
        "ast",
        "pathlib",
        "datetime",
        "inspect",
        "dataclasses",
        "typing",
        "re",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-frame-analyzer.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:37:10.671397",
      "functionality_score": 100.0,
      "documentation_score": 52.62969588550984,
      "integration_score": 100.0,
      "risks": [
        {
          "type": "performance",
          "level": "medium",
          "description": "Potential performance issue with large loops",
          "line": 7
        },
        {
          "type": "dependency",
          "level": "medium",
          "description": "Wildcard import - potential namespace pollution",
          "line": 435
        }
      ],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [
        "_identify_pre_hooks"
      ],
      "post_hooks": [
        "_identify_post_hooks"
      ],
      "webhooks": [
        "_identify_pre_hooks",
        "_identify_post_hooks",
        "_identify_webhooks"
      ],
      "dependencies": [
        "importlib",
        "enum",
        "os",
        "subprocess",
        "json",
        "glob",
        "ast",
        "datetime",
        "inspect",
        "dataclasses",
        "typing",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "cross-agent-communication-protocol-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:11.149652",
      "functionality_score": 85.0,
      "documentation_score": 37.161572052401745,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "asyncio",
        "logging",
        "enum",
        "uuid",
        "json",
        "pathlib",
        "threading",
        "datetime",
        "dataclasses",
        "queue",
        "typing",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "deep-pattern-recognition-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:11.740861",
      "functionality_score": 75.0,
      "documentation_score": 37.24696356275304,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "json",
        "collections",
        "datetime",
        "traceback",
        "typing",
        "re",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:12.146372",
      "functionality_score": 75.0,
      "documentation_score": 35.29469548133595,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "logging",
        "enum",
        "subprocess",
        "pathlib",
        "json",
        "datetime",
        "concurrent",
        "dataclasses",
        "typing",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "existence-check-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:12.529392",
      "functionality_score": 85.0,
      "documentation_score": 36.68,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "glob",
        "json",
        "datetime",
        "dataclasses",
        "typing",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filesystem-discovery-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:12.890984",
      "functionality_score": 55.0,
      "documentation_score": 35.54545454545455,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "pathlib",
        "typing",
        "json"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filetree-organizer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:13.116636",
      "functionality_score": 65.0,
      "documentation_score": 36.339285714285715,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "pathlib",
        "json",
        "datetime",
        "shutil",
        "typing"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-intelligence-system.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
      "category": "intelligence",
      "analysis_timestamp": "2025-08-13T11:37:13.370104",
      "functionality_score": 75.0,
      "documentation_score": 36.699604743083,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "importlib",
        "enum",
        "os",
        "subprocess",
        "json",
        "datetime",
        "dataclasses",
        "typing"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-rationalization-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:37:13.788776",
      "functionality_score": 75.0,
      "documentation_score": 37.11267605633803,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "logging",
        "enum",
        "pathlib",
        "json",
        "datetime",
        "dataclasses",
        "typing",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "human-approval-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:14.149095",
      "functionality_score": 75.0,
      "documentation_score": 37.201834862385326,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "json",
        "datetime",
        "traceback",
        "typing",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "hybrid-documentation-tauri-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T11:37:14.487583",
      "functionality_score": 85.0,
      "documentation_score": 35.92511013215859,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "enum",
        "os",
        "subprocess",
        "json",
        "pathlib",
        "datetime",
        "shutil",
        "dataclasses",
        "typing",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "import-dependency-graph-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:14.942225",
      "functionality_score": 55.0,
      "documentation_score": 35.46153846153846,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "pathlib",
        "json",
        "datetime",
        "re",
        "typing"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "improvement-optimization-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:15.221443",
      "functionality_score": 55.0,
      "documentation_score": 36.504702194357364,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "subprocess",
        "pathlib",
        "json",
        "datetime",
        "traceback",
        "typing",
        "sys"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "index-registrar-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:15.562375",
      "functionality_score": 55.0,
      "documentation_score": 35.625,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "datetime",
        "pathlib",
        "typing",
        "json"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "intelligent-caching-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:15.815416",
      "functionality_score": 85.0,
      "documentation_score": 52.123893805309734,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [
        "cleanup_expired",
        "cleanup"
      ],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "json",
        "collections",
        "datetime",
        "shutil",
        "hashlib",
        "traceback",
        "typing",
        "sys",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "knowledge-hub-update-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:16.203073",
      "functionality_score": 75.0,
      "documentation_score": 36.687979539641944,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "json",
        "datetime",
        "hashlib",
        "traceback",
        "typing",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "log-tailer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:16.576291",
      "functionality_score": 55.0,
      "documentation_score": 36.0948905109489,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "subprocess",
        "pathlib",
        "json",
        "datetime",
        "traceback",
        "typing",
        "sys",
        "time"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "meta-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:37:16.886995",
      "functionality_score": 75.0,
      "documentation_score": 36.83333333333333,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "json",
        "collections",
        "datetime",
        "traceback",
        "typing",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "parallel-execution-coordinator-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:17.246335",
      "functionality_score": 75.0,
      "documentation_score": 37.046908315565034,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "importlib",
        "os",
        "pathlib",
        "json",
        "threading",
        "datetime",
        "concurrent",
        "dataclasses",
        "traceback",
        "typing",
        "queue",
        "sys",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "predictive-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:37:17.636687",
      "functionality_score": 85.0,
      "documentation_score": 37.28476821192053,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "statistics",
        "os",
        "pathlib",
        "json",
        "collections",
        "datetime",
        "traceback",
        "typing",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "real-time-monitoring-dashboard-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
      "category": "diagnostic",
      "analysis_timestamp": "2025-08-13T11:37:18.067163",
      "functionality_score": 85.0,
      "documentation_score": 36.91897654584221,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "asyncio",
        "subprocess",
        "json",
        "pathlib",
        "threading",
        "psutil",
        "datetime",
        "dataclasses",
        "typing",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "research-information-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
      "category": "research",
      "analysis_timestamp": "2025-08-13T11:37:18.480150",
      "functionality_score": 75.0,
      "documentation_score": 37.24924012158055,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "research_chain",
          "description": "Can be enhanced with pattern recognition and synergy analysis",
          "related_frames": [
            "deep-pattern-recognition-frame.py",
            "synergy-analyzer.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "sys",
        "os",
        "json",
        "glob",
        "datetime",
        "dataclasses",
        "typing"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "resource-allocation-engine-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:19.011257",
      "functionality_score": 85.0,
      "documentation_score": 37.5,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "logging",
        "enum",
        "uuid",
        "json",
        "pathlib",
        "threading",
        "psutil",
        "datetime",
        "dataclasses",
        "queue",
        "typing",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "security-audit-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
      "category": "security",
      "analysis_timestamp": "2025-08-13T11:37:19.415704",
      "functionality_score": 85.0,
      "documentation_score": 36.65289256198347,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "security_chain",
          "description": "Can be chained with other security frames for comprehensive audit",
          "related_frames": [
            "security-audit-frame.py",
            "risk-assessment-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "datetime",
        "dataclasses",
        "typing",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "self-healing-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:19.931348",
      "functionality_score": 75.0,
      "documentation_score": 36.25226860254084,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "subprocess",
        "pathlib",
        "json",
        "datetime",
        "traceback",
        "typing",
        "sys",
        "time"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "universal-task-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T11:37:20.337335",
      "functionality_score": 75.0,
      "documentation_score": 37.0,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "importlib",
        "enum",
        "os",
        "subprocess",
        "json",
        "datetime",
        "existence_check_frame",
        "dataclasses",
        "typing",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "webhook-endpoint-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:37:20.765440",
      "functionality_score": 55.0,
      "documentation_score": 36.5,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [
        "run_webhook_endpoint_analyzer"
      ],
      "dependencies": [
        "os",
        "pathlib",
        "json",
        "datetime",
        "re",
        "typing"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-error-detection-frame.cjs",
      "file_path": "scripts\\enhanced-error-detection-frame.cjs",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:21.115896",
      "functionality_score": 55.0,
      "documentation_score": 15.028063610851262,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "error-detection-frame.js",
      "file_path": "scripts\\error-detection-frame.js",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:21.684914",
      "functionality_score": 55.0,
      "documentation_score": 15.062630480167014,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "frame-optimizer.py",
      "file_path": "scripts\\frame-optimizer.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:37:22.009525",
      "functionality_score": 45.0,
      "documentation_score": 16.142857142857142,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [
        {
          "type": "error_handling",
          "description": "Missing error handling in functions",
          "severity": "high"
        },
        {
          "type": "documentation",
          "description": "Missing function documentation",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "os",
        "pathlib",
        "json",
        "re",
        "typing"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "framework-validation.js",
      "file_path": "scripts\\framework-validation.js",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:37:22.245524",
      "functionality_score": 0.0,
      "documentation_score": 0.0,
      "integration_score": 0.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "autonomous-framework-v2.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:56:03.028224",
      "functionality_score": 85.0,
      "documentation_score": 51.858707971288254,
      "integration_score": 100.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "re",
        "typing",
        "datetime",
        "os",
        "dataclasses",
        "tempfile",
        "enum",
        "importlib",
        "pathlib",
        "urllib",
        "traceback",
        "shutil",
        "sys",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "autonomous-framework.py",
      "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:56:03.736604",
      "functionality_score": 85.0,
      "documentation_score": 51.38977635782747,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "typing",
        "datetime",
        "os",
        "dataclasses",
        "enum",
        "importlib",
        "pathlib",
        "traceback",
        "sys",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:03.991677",
      "functionality_score": 85.0,
      "documentation_score": 36.54373927958834,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "re",
        "typing",
        "datetime",
        "dataclasses",
        "enum",
        "logging",
        "pathlib",
        "subprocess",
        "threading"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-documentation-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:04.237430",
      "functionality_score": 85.0,
      "documentation_score": 53.00867888138862,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "re",
        "typing",
        "inspect",
        "os",
        "datetime",
        "dataclasses",
        "glob",
        "enum",
        "ast",
        "pathlib",
        "sys",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "comprehensive-frame-analyzer.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:56:04.585713",
      "functionality_score": 100.0,
      "documentation_score": 52.62969588550984,
      "integration_score": 100.0,
      "risks": [
        {
          "type": "performance",
          "level": "medium",
          "description": "Potential performance issue with large loops",
          "line": 7
        },
        {
          "type": "dependency",
          "level": "medium",
          "description": "Wildcard import - potential namespace pollution",
          "line": 435
        }
      ],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [
        "_identify_pre_hooks"
      ],
      "post_hooks": [
        "_identify_post_hooks"
      ],
      "webhooks": [
        "_identify_pre_hooks",
        "_identify_post_hooks",
        "_identify_webhooks"
      ],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "os",
        "inspect",
        "dataclasses",
        "glob",
        "enum",
        "ast",
        "importlib",
        "sys",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "cross-agent-communication-protocol-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:04.917647",
      "functionality_score": 85.0,
      "documentation_score": 37.161572052401745,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "typing",
        "queue",
        "datetime",
        "dataclasses",
        "enum",
        "asyncio",
        "logging",
        "pathlib",
        "uuid",
        "threading"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "deep-pattern-recognition-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:05.419994",
      "functionality_score": 75.0,
      "documentation_score": 37.24696356275304,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "re",
        "typing",
        "datetime",
        "os",
        "pathlib",
        "traceback",
        "sys",
        "collections"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:05.658368",
      "functionality_score": 75.0,
      "documentation_score": 35.29469548133595,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "concurrent",
        "typing",
        "datetime",
        "dataclasses",
        "enum",
        "logging",
        "pathlib",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "existence-check-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:05.897808",
      "functionality_score": 85.0,
      "documentation_score": 36.68,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "os",
        "dataclasses",
        "glob",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filesystem-discovery-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:06.146662",
      "functionality_score": 55.0,
      "documentation_score": 35.54545454545455,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "filetree-organizer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:06.347798",
      "functionality_score": 65.0,
      "documentation_score": 36.339285714285715,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "pathlib",
        "shutil"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-intelligence-system.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
      "category": "intelligence",
      "analysis_timestamp": "2025-08-13T11:56:06.530573",
      "functionality_score": 75.0,
      "documentation_score": 36.699604743083,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "os",
        "dataclasses",
        "enum",
        "importlib",
        "sys",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "frame-rationalization-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:56:06.858051",
      "functionality_score": 75.0,
      "documentation_score": 37.11267605633803,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "typing",
        "datetime",
        "dataclasses",
        "enum",
        "logging",
        "pathlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "human-approval-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:07.112233",
      "functionality_score": 75.0,
      "documentation_score": 37.201834862385326,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "os",
        "pathlib",
        "traceback",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "hybrid-documentation-tauri-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T11:56:07.369009",
      "functionality_score": 85.0,
      "documentation_score": 35.92511013215859,
      "integration_score": 65.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "dataclasses",
        "os",
        "enum",
        "pathlib",
        "shutil",
        "sys",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "import-dependency-graph-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:07.683300",
      "functionality_score": 55.0,
      "documentation_score": 35.46153846153846,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "re",
        "typing",
        "datetime",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "improvement-optimization-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:07.866573",
      "functionality_score": 55.0,
      "documentation_score": 36.504702194357364,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "os",
        "pathlib",
        "traceback",
        "sys",
        "subprocess"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "index-registrar-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:08.120338",
      "functionality_score": 55.0,
      "documentation_score": 35.625,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "pathlib"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "intelligent-caching-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:08.312604",
      "functionality_score": 85.0,
      "documentation_score": 52.123893805309734,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [
        "cleanup_expired",
        "cleanup"
      ],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "typing",
        "datetime",
        "os",
        "pathlib",
        "traceback",
        "shutil",
        "sys",
        "collections",
        "hashlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "knowledge-hub-update-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:08.608721",
      "functionality_score": 75.0,
      "documentation_score": 36.687979539641944,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "os",
        "pathlib",
        "traceback",
        "sys",
        "hashlib"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "log-tailer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:08.861744",
      "functionality_score": 55.0,
      "documentation_score": 36.0948905109489,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "typing",
        "datetime",
        "os",
        "pathlib",
        "traceback",
        "sys",
        "subprocess"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "meta-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:56:09.067856",
      "functionality_score": 75.0,
      "documentation_score": 36.83333333333333,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "os",
        "pathlib",
        "traceback",
        "sys",
        "collections"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "parallel-execution-coordinator-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:09.308070",
      "functionality_score": 75.0,
      "documentation_score": 37.046908315565034,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "concurrent",
        "typing",
        "queue",
        "datetime",
        "os",
        "dataclasses",
        "importlib",
        "pathlib",
        "traceback",
        "sys",
        "threading"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "predictive-analysis-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:56:09.568608",
      "functionality_score": 85.0,
      "documentation_score": 37.28476821192053,
      "integration_score": 50.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "statistics",
        "typing",
        "datetime",
        "os",
        "pathlib",
        "traceback",
        "sys",
        "collections"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "real-time-monitoring-dashboard-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
      "category": "diagnostic",
      "analysis_timestamp": "2025-08-13T11:56:09.912212",
      "functionality_score": 85.0,
      "documentation_score": 36.91897654584221,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "typing",
        "psutil",
        "datetime",
        "dataclasses",
        "asyncio",
        "pathlib",
        "subprocess",
        "threading"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "research-information-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
      "category": "research",
      "analysis_timestamp": "2025-08-13T11:56:10.215744",
      "functionality_score": 75.0,
      "documentation_score": 37.24924012158055,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "research_chain",
          "description": "Can be enhanced with pattern recognition and synergy analysis",
          "related_frames": [
            "deep-pattern-recognition-frame.py",
            "synergy-analyzer.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "os",
        "dataclasses",
        "glob",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "resource-allocation-engine-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:10.580732",
      "functionality_score": 85.0,
      "documentation_score": 37.5,
      "integration_score": 85.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "typing",
        "queue",
        "psutil",
        "datetime",
        "dataclasses",
        "enum",
        "logging",
        "pathlib",
        "uuid",
        "threading"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "security-audit-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
      "category": "security",
      "analysis_timestamp": "2025-08-13T11:56:10.853710",
      "functionality_score": 85.0,
      "documentation_score": 36.65289256198347,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [
        {
          "type": "configuration",
          "description": "Hardcoded values should be configurable",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [
        {
          "type": "security_chain",
          "description": "Can be chained with other security frames for comprehensive audit",
          "related_frames": [
            "security-audit-frame.py",
            "risk-assessment-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "dataclasses",
        "sys"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "self-healing-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:11.207529",
      "functionality_score": 75.0,
      "documentation_score": 36.25226860254084,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "time",
        "typing",
        "datetime",
        "os",
        "pathlib",
        "traceback",
        "sys",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "universal-task-orchestrator.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
      "category": "orchestration",
      "analysis_timestamp": "2025-08-13T11:56:11.600365",
      "functionality_score": 75.0,
      "documentation_score": 37.0,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "missing_dependency",
          "description": "Missing module: existence_check_frame",
          "severity": "high"
        }
      ],
      "synergies": [
        {
          "type": "orchestration_chain",
          "description": "Can coordinate with frame intelligence system for optimal execution",
          "related_frames": [
            "frame-intelligence-system.py",
            "universal-task-orchestrator.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "typing",
        "datetime",
        "os",
        "dataclasses",
        "existence_check_frame",
        "enum",
        "importlib",
        "sys",
        "subprocess"
      ],
      "recommendations": [
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Missing module: existence_check_frame"
      ]
    },
    {
      "frame_name": "webhook-endpoint-analyzer-frame.py",
      "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
      "category": "analysis",
      "analysis_timestamp": "2025-08-13T11:56:11.968875",
      "functionality_score": 55.0,
      "documentation_score": 36.5,
      "integration_score": 70.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [
        {
          "type": "analysis_chain",
          "description": "Can be combined with other analysis frames for comprehensive insights",
          "related_frames": [
            "meta-analysis-frame.py",
            "predictive-analysis-frame.py"
          ]
        }
      ],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [
        "run_webhook_endpoint_analyzer"
      ],
      "dependencies": [
        "json",
        "re",
        "typing",
        "datetime",
        "pathlib",
        "os"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation"
      ],
      "priority_fixes": []
    },
    {
      "frame_name": "enhanced-error-detection-frame.cjs",
      "file_path": "scripts\\enhanced-error-detection-frame.cjs",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:12.218493",
      "functionality_score": 55.0,
      "documentation_score": 15.028063610851262,
      "integration_score": 55.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "error-detection-frame.js",
      "file_path": "scripts\\error-detection-frame.js",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:12.693203",
      "functionality_score": 55.0,
      "documentation_score": 15.062630480167014,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [],
      "blockers": [
        {
          "type": "syntax_error",
          "description": "Syntax error: invalid syntax (<unknown>, line 3)",
          "line": 3,
          "severity": "critical"
        }
      ],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Resolve blocking issues before deployment"
      ],
      "priority_fixes": [
        "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
      ]
    },
    {
      "frame_name": "frame-optimizer.py",
      "file_path": "scripts\\frame-optimizer.py",
      "category": "utility",
      "analysis_timestamp": "2025-08-13T11:56:13.061517",
      "functionality_score": 45.0,
      "documentation_score": 16.142857142857142,
      "integration_score": 35.0,
      "risks": [],
      "gaps": [
        {
          "type": "error_handling",
          "description": "Missing error handling in functions",
          "severity": "high"
        },
        {
          "type": "documentation",
          "description": "Missing function documentation",
          "severity": "medium"
        }
      ],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [
        "json",
        "re",
        "typing",
        "pathlib",
        "os"
      ],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities",
        "Fill identified functionality gaps"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    },
    {
      "frame_name": "framework-validation.js",
      "file_path": "scripts\\framework-validation.js",
      "category": "meta_analysis",
      "analysis_timestamp": "2025-08-13T11:56:13.386241",
      "functionality_score": 0.0,
      "documentation_score": 0.0,
      "integration_score": 0.0,
      "risks": [],
      "gaps": [],
      "blockers": [],
      "synergies": [],
      "duplications": [],
      "pre_hooks": [],
      "post_hooks": [],
      "webhooks": [],
      "dependencies": [],
      "recommendations": [
        "Improve core functionality and error handling",
        "Add proper main function and entry points",
        "Add comprehensive docstrings and comments",
        "Add module-level documentation",
        "Improve integration with other system components",
        "Add database and API integration capabilities"
      ],
      "priority_fixes": [
        "Improve core functionality"
      ]
    }
  ],
  "system_analysis": {
    "analysis_timestamp": "2025-08-13T11:56:13.642056",
    "total_frames": 309,
    "functional_frames": 210,
    "documented_frames": 0,
    "integrated_frames": 87,
    "critical_risks": 2,
    "high_risks": 12,
    "medium_risks": 18,
    "gaps_found": 42,
    "blockers_found": 65,
    "synergies_identified": 78,
    "duplications_found": 0,
    "frame_analyses": [
      {
        "frame_name": "autonomous-framework-v2.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-12T18:13:56.937565",
        "functionality_score": 85.0,
        "documentation_score": 51.858707971288254,
        "integration_score": 100.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "sys",
          "datetime",
          "pathlib",
          "enum",
          "os",
          "shutil",
          "typing",
          "importlib",
          "subprocess",
          "time",
          "dataclasses",
          "json",
          "urllib",
          "traceback",
          "tempfile"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "autonomous-framework.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-12T18:13:57.160510",
        "functionality_score": 85.0,
        "documentation_score": 51.38977635782747,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "datetime",
          "pathlib",
          "enum",
          "os",
          "typing",
          "importlib",
          "subprocess",
          "time",
          "dataclasses",
          "json",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:57.174643",
        "functionality_score": 100.0,
        "documentation_score": 36.54373927958834,
        "integration_score": 65.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 484
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "threading",
          "logging",
          "datetime",
          "pathlib",
          "enum",
          "typing",
          "subprocess",
          "time",
          "dataclasses",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "comprehensive-frame-analyzer.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:13:57.216766",
        "functionality_score": 100.0,
        "documentation_score": 52.57294429708223,
        "integration_score": 100.0,
        "risks": [
          {
            "type": "security",
            "level": "critical",
            "description": "Use of eval() function - potential code injection risk",
            "line": 413
          },
          {
            "type": "security",
            "level": "critical",
            "description": "Use of exec() function - potential code injection risk",
            "line": 421
          },
          {
            "type": "performance",
            "level": "medium",
            "description": "Potential performance issue with large loops",
            "line": 7
          },
          {
            "type": "dependency",
            "level": "medium",
            "description": "Wildcard import - potential namespace pollution",
            "line": 448
          }
        ],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [
          "_identify_pre_hooks"
        ],
        "post_hooks": [
          "_identify_post_hooks"
        ],
        "webhooks": [
          "_identify_pre_hooks",
          "_identify_post_hooks",
          "_identify_webhooks"
        ],
        "dependencies": [
          "ast",
          "glob",
          "inspect",
          "sys",
          "datetime",
          "enum",
          "os",
          "typing",
          "importlib",
          "dataclasses",
          "subprocess",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Address critical security risks immediately",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": [
          "Fix critical risk: Use of eval() function - potential code injection risk",
          "Fix critical risk: Use of exec() function - potential code injection risk"
        ]
      },
      {
        "frame_name": "cross-agent-communication-protocol-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:57.244058",
        "functionality_score": 85.0,
        "documentation_score": 37.161572052401745,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "threading",
          "logging",
          "datetime",
          "pathlib",
          "enum",
          "queue",
          "asyncio",
          "typing",
          "dataclasses",
          "time",
          "uuid",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "deep-pattern-recognition-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:57.670457",
        "functionality_score": 75.0,
        "documentation_score": 37.24696356275304,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "sys",
          "datetime",
          "pathlib",
          "os",
          "typing",
          "json",
          "traceback",
          "collections"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:57.708539",
        "functionality_score": 75.0,
        "documentation_score": 35.29469548133595,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "logging",
          "datetime",
          "concurrent",
          "pathlib",
          "enum",
          "typing",
          "subprocess",
          "time",
          "dataclasses",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "existence-check-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:57.747537",
        "functionality_score": 85.0,
        "documentation_score": 36.68,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "glob",
          "sys",
          "datetime",
          "os",
          "typing",
          "dataclasses",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filesystem-discovery-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:57.773907",
        "functionality_score": 55.0,
        "documentation_score": 35.54545454545455,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "datetime",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filetree-organizer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:57.806780",
        "functionality_score": 65.0,
        "documentation_score": 36.339285714285715,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "shutil",
          "pathlib",
          "typing",
          "json"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-intelligence-system.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
        "category": "intelligence",
        "analysis_timestamp": "2025-08-12T18:13:57.840426",
        "functionality_score": 75.0,
        "documentation_score": 36.6597510373444,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: universal_task_orchestrator",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "datetime",
          "enum",
          "os",
          "universal_task_orchestrator",
          "typing",
          "dataclasses",
          "research_information_frame",
          "existence_check_frame",
          "subprocess",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: universal_task_orchestrator",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "frame-rationalization-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:13:57.871462",
        "functionality_score": 75.0,
        "documentation_score": 37.11267605633803,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "logging",
          "datetime",
          "pathlib",
          "enum",
          "typing",
          "dataclasses",
          "time",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "human-approval-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:57.894668",
        "functionality_score": 75.0,
        "documentation_score": 37.201834862385326,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "datetime",
          "pathlib",
          "os",
          "typing",
          "json",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "import-dependency-graph-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:57.937319",
        "functionality_score": 55.0,
        "documentation_score": 35.46153846153846,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "datetime",
          "pathlib",
          "typing",
          "json"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "improvement-optimization-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:57.972948",
        "functionality_score": 55.0,
        "documentation_score": 36.504702194357364,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "datetime",
          "pathlib",
          "os",
          "typing",
          "subprocess",
          "json",
          "traceback"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "index-registrar-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:58.011158",
        "functionality_score": 55.0,
        "documentation_score": 35.625,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "datetime",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "intelligent-caching-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:58.043322",
        "functionality_score": 100.0,
        "documentation_score": 52.123893805309734,
        "integration_score": 70.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 42
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [
          "cleanup_expired",
          "cleanup"
        ],
        "webhooks": [],
        "dependencies": [
          "sys",
          "datetime",
          "pathlib",
          "shutil",
          "os",
          "typing",
          "time",
          "hashlib",
          "json",
          "traceback",
          "collections"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "knowledge-hub-update-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:58.138739",
        "functionality_score": 75.0,
        "documentation_score": 36.687979539641944,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "datetime",
          "pathlib",
          "os",
          "typing",
          "hashlib",
          "json",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "log-tailer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:58.180127",
        "functionality_score": 55.0,
        "documentation_score": 36.0948905109489,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "datetime",
          "pathlib",
          "os",
          "typing",
          "subprocess",
          "time",
          "json",
          "traceback"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "meta-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:13:58.217963",
        "functionality_score": 75.0,
        "documentation_score": 36.83333333333333,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "datetime",
          "pathlib",
          "os",
          "typing",
          "json",
          "traceback",
          "collections"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "parallel-execution-coordinator-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:58.258595",
        "functionality_score": 75.0,
        "documentation_score": 37.046908315565034,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "threading",
          "sys",
          "datetime",
          "pathlib",
          "concurrent",
          "os",
          "queue",
          "typing",
          "importlib",
          "dataclasses",
          "time",
          "json",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "predictive-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:13:58.310110",
        "functionality_score": 85.0,
        "documentation_score": 37.28476821192053,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "datetime",
          "pathlib",
          "os",
          "statistics",
          "typing",
          "json",
          "traceback",
          "collections"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "real-time-monitoring-dashboard-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
        "category": "diagnostic",
        "analysis_timestamp": "2025-08-12T18:13:58.420768",
        "functionality_score": 85.0,
        "documentation_score": 36.91897654584221,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "threading",
          "datetime",
          "pathlib",
          "asyncio",
          "typing",
          "subprocess",
          "time",
          "dataclasses",
          "psutil",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "research-information-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
        "category": "research",
        "analysis_timestamp": "2025-08-12T18:13:58.541161",
        "functionality_score": 75.0,
        "documentation_score": 37.24924012158055,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "research_chain",
            "description": "Can be enhanced with pattern recognition and synergy analysis",
            "related_frames": [
              "deep-pattern-recognition-frame.py",
              "synergy-analyzer.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "glob",
          "sys",
          "datetime",
          "os",
          "typing",
          "dataclasses",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "resource-allocation-engine-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:58.620862",
        "functionality_score": 85.0,
        "documentation_score": 37.5,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "threading",
          "logging",
          "datetime",
          "pathlib",
          "enum",
          "queue",
          "typing",
          "dataclasses",
          "time",
          "uuid",
          "psutil",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "security-audit-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
        "category": "security",
        "analysis_timestamp": "2025-08-12T18:13:58.675647",
        "functionality_score": 85.0,
        "documentation_score": 36.65289256198347,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "security_chain",
            "description": "Can be chained with other security frames for comprehensive audit",
            "related_frames": [
              "security-audit-frame.py",
              "risk-assessment-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "sys",
          "typing",
          "dataclasses",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "self-healing-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:58.726842",
        "functionality_score": 75.0,
        "documentation_score": 36.25226860254084,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "datetime",
          "pathlib",
          "os",
          "typing",
          "subprocess",
          "time",
          "json",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "universal-task-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-12T18:13:58.788452",
        "functionality_score": 75.0,
        "documentation_score": 36.959798994974875,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: security_audit_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "datetime",
          "enum",
          "os",
          "typing",
          "subprocess",
          "dataclasses",
          "existence_check_frame",
          "research_information_frame",
          "security_audit_frame",
          "json"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: existence_check_frame",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: security_audit_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "webhook-endpoint-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:13:58.837984",
        "functionality_score": 55.0,
        "documentation_score": 36.5,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [
          "run_webhook_endpoint_analyzer"
        ],
        "dependencies": [
          "re",
          "datetime",
          "pathlib",
          "os",
          "typing",
          "json"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-error-detection-frame.cjs",
        "file_path": "scripts\\enhanced-error-detection-frame.cjs",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:58.885627",
        "functionality_score": 55.0,
        "documentation_score": 15.028063610851262,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "error-detection-frame.js",
        "file_path": "scripts\\error-detection-frame.js",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:58.966545",
        "functionality_score": 55.0,
        "documentation_score": 15.062630480167014,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "frame-optimizer.py",
        "file_path": "scripts\\frame-optimizer.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:13:59.029641",
        "functionality_score": 45.0,
        "documentation_score": 16.142857142857142,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [
          {
            "type": "error_handling",
            "description": "Missing error handling in functions",
            "severity": "high"
          },
          {
            "type": "documentation",
            "description": "Missing function documentation",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "pathlib",
          "os",
          "typing",
          "json"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "framework-validation.js",
        "file_path": "scripts\\framework-validation.js",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-12T18:13:59.077576",
        "functionality_score": 0.0,
        "documentation_score": 0.0,
        "integration_score": 0.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "autonomous-framework-v2.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-12T18:17:56.403346",
        "functionality_score": 85.0,
        "documentation_score": 51.858707971288254,
        "integration_score": 100.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "shutil",
          "traceback",
          "re",
          "time",
          "datetime",
          "pathlib",
          "enum",
          "sys",
          "os",
          "urllib",
          "json",
          "tempfile",
          "typing",
          "dataclasses",
          "subprocess",
          "importlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "autonomous-framework.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-12T18:17:56.629275",
        "functionality_score": 85.0,
        "documentation_score": 51.38977635782747,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "traceback",
          "time",
          "datetime",
          "pathlib",
          "enum",
          "sys",
          "os",
          "json",
          "typing",
          "dataclasses",
          "subprocess",
          "importlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:56.702758",
        "functionality_score": 100.0,
        "documentation_score": 36.54373927958834,
        "integration_score": 65.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 484
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "time",
          "datetime",
          "pathlib",
          "enum",
          "json",
          "typing",
          "dataclasses",
          "subprocess",
          "threading",
          "logging"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "comprehensive-frame-analyzer.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:17:56.781695",
        "functionality_score": 100.0,
        "documentation_score": 52.62969588550984,
        "integration_score": 100.0,
        "risks": [
          {
            "type": "performance",
            "level": "medium",
            "description": "Potential performance issue with large loops",
            "line": 7
          },
          {
            "type": "dependency",
            "level": "medium",
            "description": "Wildcard import - potential namespace pollution",
            "line": 435
          }
        ],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [
          "_identify_pre_hooks"
        ],
        "post_hooks": [
          "_identify_post_hooks"
        ],
        "webhooks": [
          "_identify_pre_hooks",
          "_identify_post_hooks",
          "_identify_webhooks"
        ],
        "dependencies": [
          "glob",
          "datetime",
          "enum",
          "sys",
          "inspect",
          "ast",
          "os",
          "json",
          "typing",
          "dataclasses",
          "subprocess",
          "importlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "cross-agent-communication-protocol-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:56.870308",
        "functionality_score": 85.0,
        "documentation_score": 37.161572052401745,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "uuid",
          "time",
          "datetime",
          "pathlib",
          "enum",
          "json",
          "typing",
          "dataclasses",
          "queue",
          "asyncio",
          "threading",
          "logging"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "deep-pattern-recognition-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:57.028170",
        "functionality_score": 75.0,
        "documentation_score": 37.24696356275304,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "traceback",
          "datetime",
          "pathlib",
          "sys",
          "os",
          "json",
          "typing",
          "collections"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:57.085308",
        "functionality_score": 75.0,
        "documentation_score": 35.29469548133595,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "datetime",
          "pathlib",
          "enum",
          "concurrent",
          "json",
          "typing",
          "dataclasses",
          "subprocess",
          "logging"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "existence-check-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:57.147957",
        "functionality_score": 85.0,
        "documentation_score": 36.68,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "glob",
          "datetime",
          "sys",
          "os",
          "json",
          "typing",
          "dataclasses"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filesystem-discovery-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:57.212409",
        "functionality_score": 55.0,
        "documentation_score": 35.54545454545455,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "pathlib",
          "typing",
          "json",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filetree-organizer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:57.257718",
        "functionality_score": 65.0,
        "documentation_score": 36.339285714285715,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "shutil",
          "datetime",
          "pathlib",
          "json",
          "typing"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-intelligence-system.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
        "category": "intelligence",
        "analysis_timestamp": "2025-08-12T18:17:57.316823",
        "functionality_score": 75.0,
        "documentation_score": 36.757656458055926,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: expected 'except' or 'finally' block (<unknown>, line 547)",
            "line": 547,
            "severity": "critical"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: universal_task_orchestrator",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "research_information_frame",
          "datetime",
          "existence_check_frame",
          "enum",
          "sys",
          "os",
          "json",
          "typing",
          "dataclasses",
          "subprocess",
          "universal_task_orchestrator"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: expected 'except' or 'finally' block (<unknown>, line 547)",
          "Resolve blocker: Missing module: universal_task_orchestrator",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "frame-rationalization-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:17:57.435761",
        "functionality_score": 75.0,
        "documentation_score": 37.11267605633803,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "datetime",
          "pathlib",
          "enum",
          "json",
          "typing",
          "dataclasses",
          "logging"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "human-approval-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:57.507075",
        "functionality_score": 75.0,
        "documentation_score": 37.201834862385326,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "traceback",
          "datetime",
          "pathlib",
          "sys",
          "os",
          "json",
          "typing"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "import-dependency-graph-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:57.574581",
        "functionality_score": 55.0,
        "documentation_score": 35.46153846153846,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "datetime",
          "pathlib",
          "json",
          "typing"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "improvement-optimization-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:57.623330",
        "functionality_score": 55.0,
        "documentation_score": 36.504702194357364,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "traceback",
          "datetime",
          "pathlib",
          "sys",
          "os",
          "json",
          "typing",
          "subprocess"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "index-registrar-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:57.732407",
        "functionality_score": 55.0,
        "documentation_score": 35.625,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "pathlib",
          "typing",
          "json",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "intelligent-caching-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:57.819741",
        "functionality_score": 100.0,
        "documentation_score": 52.123893805309734,
        "integration_score": 70.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 42
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [
          "cleanup_expired",
          "cleanup"
        ],
        "webhooks": [],
        "dependencies": [
          "shutil",
          "traceback",
          "time",
          "datetime",
          "pathlib",
          "sys",
          "os",
          "json",
          "hashlib",
          "typing",
          "collections"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "knowledge-hub-update-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:57.930742",
        "functionality_score": 75.0,
        "documentation_score": 36.687979539641944,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "traceback",
          "datetime",
          "pathlib",
          "sys",
          "os",
          "json",
          "hashlib",
          "typing"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "log-tailer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:58.028932",
        "functionality_score": 55.0,
        "documentation_score": 36.0948905109489,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "traceback",
          "time",
          "datetime",
          "pathlib",
          "sys",
          "os",
          "json",
          "typing",
          "subprocess"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "meta-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:17:58.088399",
        "functionality_score": 75.0,
        "documentation_score": 36.83333333333333,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "traceback",
          "datetime",
          "pathlib",
          "sys",
          "os",
          "json",
          "typing",
          "collections"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "parallel-execution-coordinator-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:58.158617",
        "functionality_score": 75.0,
        "documentation_score": 37.046908315565034,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "traceback",
          "time",
          "datetime",
          "pathlib",
          "sys",
          "concurrent",
          "os",
          "json",
          "typing",
          "dataclasses",
          "queue",
          "threading",
          "importlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "predictive-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:17:58.233299",
        "functionality_score": 85.0,
        "documentation_score": 37.28476821192053,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "traceback",
          "datetime",
          "pathlib",
          "sys",
          "statistics",
          "os",
          "json",
          "typing",
          "collections"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "real-time-monitoring-dashboard-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
        "category": "diagnostic",
        "analysis_timestamp": "2025-08-12T18:17:58.335522",
        "functionality_score": 85.0,
        "documentation_score": 36.91897654584221,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "psutil",
          "time",
          "datetime",
          "pathlib",
          "threading",
          "json",
          "typing",
          "dataclasses",
          "asyncio",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "research-information-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
        "category": "research",
        "analysis_timestamp": "2025-08-12T18:17:58.433509",
        "functionality_score": 75.0,
        "documentation_score": 37.24924012158055,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "research_chain",
            "description": "Can be enhanced with pattern recognition and synergy analysis",
            "related_frames": [
              "deep-pattern-recognition-frame.py",
              "synergy-analyzer.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "glob",
          "datetime",
          "sys",
          "os",
          "json",
          "typing",
          "dataclasses"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "resource-allocation-engine-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:58.561979",
        "functionality_score": 85.0,
        "documentation_score": 37.5,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "uuid",
          "psutil",
          "time",
          "datetime",
          "pathlib",
          "enum",
          "json",
          "typing",
          "dataclasses",
          "queue",
          "threading",
          "logging"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "security-audit-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
        "category": "security",
        "analysis_timestamp": "2025-08-12T18:17:58.657961",
        "functionality_score": 85.0,
        "documentation_score": 36.65289256198347,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "security_chain",
            "description": "Can be chained with other security frames for comprehensive audit",
            "related_frames": [
              "security-audit-frame.py",
              "risk-assessment-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "sys",
          "json",
          "typing",
          "dataclasses"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "self-healing-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:58.774210",
        "functionality_score": 75.0,
        "documentation_score": 36.25226860254084,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "traceback",
          "time",
          "datetime",
          "pathlib",
          "sys",
          "os",
          "json",
          "typing",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "universal-task-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-12T18:17:58.883575",
        "functionality_score": 75.0,
        "documentation_score": 37.01877934272301,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: expected an indented block after 'try' statement on line 368 (<unknown>, line 369)",
            "line": 369,
            "severity": "critical"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: security_audit_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "research_information_frame",
          "datetime",
          "existence_check_frame",
          "security_audit_frame",
          "enum",
          "sys",
          "os",
          "json",
          "typing",
          "dataclasses",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: expected an indented block after 'try' statement on line 368 (<unknown>, line 369)",
          "Resolve blocker: Missing module: existence_check_frame",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: security_audit_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "webhook-endpoint-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:17:58.980656",
        "functionality_score": 55.0,
        "documentation_score": 36.5,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [
          "run_webhook_endpoint_analyzer"
        ],
        "dependencies": [
          "re",
          "datetime",
          "pathlib",
          "os",
          "json",
          "typing"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-error-detection-frame.cjs",
        "file_path": "scripts\\enhanced-error-detection-frame.cjs",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:59.043298",
        "functionality_score": 55.0,
        "documentation_score": 15.028063610851262,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "error-detection-frame.js",
        "file_path": "scripts\\error-detection-frame.js",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:59.152456",
        "functionality_score": 55.0,
        "documentation_score": 15.062630480167014,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "frame-optimizer.py",
        "file_path": "scripts\\frame-optimizer.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:17:59.230069",
        "functionality_score": 45.0,
        "documentation_score": 16.142857142857142,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [
          {
            "type": "error_handling",
            "description": "Missing error handling in functions",
            "severity": "high"
          },
          {
            "type": "documentation",
            "description": "Missing function documentation",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "pathlib",
          "os",
          "json",
          "typing"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "framework-validation.js",
        "file_path": "scripts\\framework-validation.js",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-12T18:17:59.294502",
        "functionality_score": 0.0,
        "documentation_score": 0.0,
        "integration_score": 0.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "autonomous-framework-v2.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-12T18:35:37.244374",
        "functionality_score": 85.0,
        "documentation_score": 51.858707971288254,
        "integration_score": 100.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "urllib",
          "time",
          "shutil",
          "subprocess",
          "typing",
          "sys",
          "json",
          "dataclasses",
          "pathlib",
          "traceback",
          "re",
          "importlib",
          "datetime",
          "tempfile",
          "enum",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "autonomous-framework.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-12T18:35:37.530765",
        "functionality_score": 85.0,
        "documentation_score": 51.38977635782747,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "subprocess",
          "typing",
          "sys",
          "json",
          "dataclasses",
          "pathlib",
          "traceback",
          "importlib",
          "datetime",
          "enum",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:37.607088",
        "functionality_score": 100.0,
        "documentation_score": 36.54373927958834,
        "integration_score": 65.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 484
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "subprocess",
          "typing",
          "json",
          "dataclasses",
          "pathlib",
          "logging",
          "re",
          "datetime",
          "threading",
          "enum"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "comprehensive-frame-analyzer.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:35:37.680542",
        "functionality_score": 100.0,
        "documentation_score": 52.62969588550984,
        "integration_score": 100.0,
        "risks": [
          {
            "type": "performance",
            "level": "medium",
            "description": "Potential performance issue with large loops",
            "line": 7
          },
          {
            "type": "dependency",
            "level": "medium",
            "description": "Wildcard import - potential namespace pollution",
            "line": 435
          }
        ],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [
          "_identify_pre_hooks"
        ],
        "post_hooks": [
          "_identify_post_hooks"
        ],
        "webhooks": [
          "_identify_pre_hooks",
          "_identify_post_hooks",
          "_identify_webhooks"
        ],
        "dependencies": [
          "inspect",
          "subprocess",
          "typing",
          "sys",
          "json",
          "dataclasses",
          "glob",
          "importlib",
          "ast",
          "datetime",
          "enum",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "cross-agent-communication-protocol-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:37.776932",
        "functionality_score": 85.0,
        "documentation_score": 37.161572052401745,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "asyncio",
          "typing",
          "json",
          "dataclasses",
          "uuid",
          "pathlib",
          "logging",
          "queue",
          "datetime",
          "threading",
          "enum"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "deep-pattern-recognition-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:38.090008",
        "functionality_score": 75.0,
        "documentation_score": 37.24696356275304,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "collections",
          "typing",
          "sys",
          "json",
          "pathlib",
          "traceback",
          "re",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:38.157619",
        "functionality_score": 75.0,
        "documentation_score": 35.29469548133595,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "subprocess",
          "typing",
          "json",
          "dataclasses",
          "pathlib",
          "logging",
          "concurrent",
          "datetime",
          "enum"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "existence-check-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:38.237967",
        "functionality_score": 85.0,
        "documentation_score": 36.68,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "typing",
          "sys",
          "json",
          "dataclasses",
          "glob",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filesystem-discovery-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:38.311697",
        "functionality_score": 55.0,
        "documentation_score": 35.54545454545455,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "typing",
          "json",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filetree-organizer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:38.365827",
        "functionality_score": 65.0,
        "documentation_score": 36.339285714285715,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "shutil",
          "typing",
          "json",
          "pathlib",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-intelligence-system.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
        "category": "intelligence",
        "analysis_timestamp": "2025-08-12T18:35:38.419186",
        "functionality_score": 75.0,
        "documentation_score": 36.72690763052209,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: universal_task_orchestrator",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "subprocess",
          "typing",
          "sys",
          "json",
          "dataclasses",
          "universal_task_orchestrator",
          "research_information_frame",
          "existence_check_frame",
          "datetime",
          "enum",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: universal_task_orchestrator",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "frame-rationalization-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:35:38.510292",
        "functionality_score": 75.0,
        "documentation_score": 37.11267605633803,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "typing",
          "json",
          "dataclasses",
          "pathlib",
          "logging",
          "datetime",
          "enum"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "human-approval-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:38.587017",
        "functionality_score": 75.0,
        "documentation_score": 37.201834862385326,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "typing",
          "sys",
          "json",
          "pathlib",
          "traceback",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "import-dependency-graph-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:38.649869",
        "functionality_score": 55.0,
        "documentation_score": 35.46153846153846,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "typing",
          "json",
          "pathlib",
          "re",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "improvement-optimization-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:38.703674",
        "functionality_score": 55.0,
        "documentation_score": 36.504702194357364,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "subprocess",
          "typing",
          "sys",
          "json",
          "pathlib",
          "traceback",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "index-registrar-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:38.767797",
        "functionality_score": 55.0,
        "documentation_score": 35.625,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "typing",
          "json",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "intelligent-caching-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:38.817547",
        "functionality_score": 100.0,
        "documentation_score": 52.123893805309734,
        "integration_score": 70.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 42
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [
          "cleanup_expired",
          "cleanup"
        ],
        "webhooks": [],
        "dependencies": [
          "collections",
          "time",
          "hashlib",
          "shutil",
          "typing",
          "sys",
          "json",
          "pathlib",
          "traceback",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "knowledge-hub-update-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:38.930859",
        "functionality_score": 75.0,
        "documentation_score": 36.687979539641944,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "hashlib",
          "typing",
          "sys",
          "json",
          "pathlib",
          "traceback",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "log-tailer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:39.009344",
        "functionality_score": 55.0,
        "documentation_score": 36.0948905109489,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "subprocess",
          "typing",
          "sys",
          "json",
          "pathlib",
          "traceback",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "meta-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:35:39.071077",
        "functionality_score": 75.0,
        "documentation_score": 36.83333333333333,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "collections",
          "typing",
          "sys",
          "json",
          "pathlib",
          "traceback",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "parallel-execution-coordinator-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:39.153515",
        "functionality_score": 75.0,
        "documentation_score": 37.046908315565034,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "typing",
          "sys",
          "json",
          "dataclasses",
          "pathlib",
          "traceback",
          "importlib",
          "queue",
          "concurrent",
          "datetime",
          "threading",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "predictive-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:35:39.226458",
        "functionality_score": 85.0,
        "documentation_score": 37.28476821192053,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "collections",
          "typing",
          "sys",
          "json",
          "pathlib",
          "traceback",
          "statistics",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "real-time-monitoring-dashboard-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
        "category": "diagnostic",
        "analysis_timestamp": "2025-08-12T18:35:39.354907",
        "functionality_score": 85.0,
        "documentation_score": 36.91897654584221,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "asyncio",
          "subprocess",
          "typing",
          "json",
          "dataclasses",
          "pathlib",
          "psutil",
          "datetime",
          "threading"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "research-information-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
        "category": "research",
        "analysis_timestamp": "2025-08-12T18:35:39.500213",
        "functionality_score": 75.0,
        "documentation_score": 37.24924012158055,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "research_chain",
            "description": "Can be enhanced with pattern recognition and synergy analysis",
            "related_frames": [
              "deep-pattern-recognition-frame.py",
              "synergy-analyzer.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "typing",
          "sys",
          "json",
          "dataclasses",
          "glob",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "resource-allocation-engine-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:39.630433",
        "functionality_score": 85.0,
        "documentation_score": 37.5,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "typing",
          "json",
          "dataclasses",
          "uuid",
          "pathlib",
          "psutil",
          "logging",
          "queue",
          "datetime",
          "threading",
          "enum"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "security-audit-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
        "category": "security",
        "analysis_timestamp": "2025-08-12T18:35:39.712464",
        "functionality_score": 85.0,
        "documentation_score": 36.65289256198347,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "security_chain",
            "description": "Can be chained with other security frames for comprehensive audit",
            "related_frames": [
              "security-audit-frame.py",
              "risk-assessment-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "typing",
          "sys",
          "json",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "self-healing-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:39.807211",
        "functionality_score": 75.0,
        "documentation_score": 36.25226860254084,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "subprocess",
          "typing",
          "sys",
          "json",
          "pathlib",
          "traceback",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "universal-task-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-12T18:35:39.897242",
        "functionality_score": 75.0,
        "documentation_score": 37.01877934272301,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: security_audit_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "subprocess",
          "security_audit_frame",
          "typing",
          "sys",
          "json",
          "dataclasses",
          "research_information_frame",
          "existence_check_frame",
          "datetime",
          "enum",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: existence_check_frame",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: security_audit_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "webhook-endpoint-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-12T18:35:40.000557",
        "functionality_score": 55.0,
        "documentation_score": 36.5,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [
          "run_webhook_endpoint_analyzer"
        ],
        "dependencies": [
          "typing",
          "json",
          "pathlib",
          "re",
          "datetime",
          "os"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-error-detection-frame.cjs",
        "file_path": "scripts\\enhanced-error-detection-frame.cjs",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:40.077974",
        "functionality_score": 55.0,
        "documentation_score": 15.028063610851262,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "error-detection-frame.js",
        "file_path": "scripts\\error-detection-frame.js",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:40.200836",
        "functionality_score": 55.0,
        "documentation_score": 15.062630480167014,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "frame-optimizer.py",
        "file_path": "scripts\\frame-optimizer.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-12T18:35:40.291590",
        "functionality_score": 45.0,
        "documentation_score": 16.142857142857142,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [
          {
            "type": "error_handling",
            "description": "Missing error handling in functions",
            "severity": "high"
          },
          {
            "type": "documentation",
            "description": "Missing function documentation",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "typing",
          "json",
          "pathlib",
          "re",
          "os"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "framework-validation.js",
        "file_path": "scripts\\framework-validation.js",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-12T18:35:40.361852",
        "functionality_score": 0.0,
        "documentation_score": 0.0,
        "integration_score": 0.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "autonomous-framework-v2.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T10:15:05.274587",
        "functionality_score": 85.0,
        "documentation_score": 51.858707971288254,
        "integration_score": 100.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "dataclasses",
          "time",
          "re",
          "json",
          "typing",
          "urllib",
          "sys",
          "os",
          "pathlib",
          "shutil",
          "datetime",
          "importlib",
          "tempfile",
          "traceback",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "autonomous-framework.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T10:15:05.611883",
        "functionality_score": 85.0,
        "documentation_score": 51.38977635782747,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "dataclasses",
          "time",
          "json",
          "typing",
          "sys",
          "os",
          "pathlib",
          "datetime",
          "importlib",
          "traceback",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:05.716451",
        "functionality_score": 100.0,
        "documentation_score": 36.54373927958834,
        "integration_score": 65.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 484
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "dataclasses",
          "time",
          "logging",
          "re",
          "json",
          "typing",
          "pathlib",
          "datetime",
          "threading",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "comprehensive-documentation-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:05.819420",
        "functionality_score": 85.0,
        "documentation_score": 53.00867888138862,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "inspect",
          "dataclasses",
          "enum",
          "re",
          "json",
          "glob",
          "typing",
          "sys",
          "os",
          "ast",
          "pathlib",
          "datetime",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-frame-analyzer.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T10:15:05.957795",
        "functionality_score": 100.0,
        "documentation_score": 52.62969588550984,
        "integration_score": 100.0,
        "risks": [
          {
            "type": "performance",
            "level": "medium",
            "description": "Potential performance issue with large loops",
            "line": 7
          },
          {
            "type": "dependency",
            "level": "medium",
            "description": "Wildcard import - potential namespace pollution",
            "line": 435
          }
        ],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [
          "_identify_pre_hooks"
        ],
        "post_hooks": [
          "_identify_post_hooks"
        ],
        "webhooks": [
          "_identify_pre_hooks",
          "_identify_post_hooks",
          "_identify_webhooks"
        ],
        "dependencies": [
          "inspect",
          "dataclasses",
          "enum",
          "json",
          "glob",
          "typing",
          "sys",
          "os",
          "ast",
          "datetime",
          "importlib",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "cross-agent-communication-protocol-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:06.104078",
        "functionality_score": 85.0,
        "documentation_score": 37.161572052401745,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "dataclasses",
          "time",
          "uuid",
          "queue",
          "json",
          "typing",
          "pathlib",
          "datetime",
          "asyncio",
          "threading",
          "logging"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "deep-pattern-recognition-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:06.493276",
        "functionality_score": 75.0,
        "documentation_score": 37.24696356275304,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "json",
          "typing",
          "sys",
          "os",
          "collections",
          "pathlib",
          "datetime",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:06.630255",
        "functionality_score": 75.0,
        "documentation_score": 35.29469548133595,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "dataclasses",
          "time",
          "logging",
          "json",
          "typing",
          "pathlib",
          "datetime",
          "concurrent",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "existence-check-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:06.809206",
        "functionality_score": 85.0,
        "documentation_score": 36.68,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "dataclasses",
          "json",
          "glob",
          "typing",
          "sys",
          "os",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filesystem-discovery-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:06.954019",
        "functionality_score": 55.0,
        "documentation_score": 35.54545454545455,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "pathlib",
          "typing",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filetree-organizer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:07.036003",
        "functionality_score": 65.0,
        "documentation_score": 36.339285714285715,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "pathlib",
          "shutil",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-intelligence-system.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
        "category": "intelligence",
        "analysis_timestamp": "2025-08-13T10:15:07.124247",
        "functionality_score": 75.0,
        "documentation_score": 36.72690763052209,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: universal_task_orchestrator",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "dataclasses",
          "universal_task_orchestrator",
          "research_information_frame",
          "existence_check_frame",
          "json",
          "typing",
          "sys",
          "os",
          "datetime",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: universal_task_orchestrator",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "frame-rationalization-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T10:15:07.270580",
        "functionality_score": 75.0,
        "documentation_score": 37.11267605633803,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "dataclasses",
          "time",
          "json",
          "typing",
          "pathlib",
          "datetime",
          "logging"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "human-approval-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:07.404412",
        "functionality_score": 75.0,
        "documentation_score": 37.201834862385326,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "sys",
          "os",
          "pathlib",
          "datetime",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "hybrid-documentation-tauri-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T10:15:07.511417",
        "functionality_score": 85.0,
        "documentation_score": 35.92511013215859,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "dataclasses",
          "json",
          "typing",
          "sys",
          "os",
          "pathlib",
          "shutil",
          "datetime",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "import-dependency-graph-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:07.650740",
        "functionality_score": 55.0,
        "documentation_score": 35.46153846153846,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "json",
          "typing",
          "pathlib",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "improvement-optimization-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:07.733994",
        "functionality_score": 55.0,
        "documentation_score": 36.504702194357364,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "sys",
          "os",
          "pathlib",
          "datetime",
          "traceback",
          "subprocess"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "index-registrar-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:07.840752",
        "functionality_score": 55.0,
        "documentation_score": 35.625,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "pathlib",
          "typing",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "intelligent-caching-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:07.910354",
        "functionality_score": 100.0,
        "documentation_score": 52.123893805309734,
        "integration_score": 70.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 42
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [
          "cleanup_expired",
          "cleanup"
        ],
        "webhooks": [],
        "dependencies": [
          "time",
          "json",
          "hashlib",
          "typing",
          "sys",
          "os",
          "collections",
          "pathlib",
          "shutil",
          "datetime",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "knowledge-hub-update-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:08.067435",
        "functionality_score": 75.0,
        "documentation_score": 36.687979539641944,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "hashlib",
          "typing",
          "sys",
          "os",
          "pathlib",
          "datetime",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "log-tailer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:08.196586",
        "functionality_score": 55.0,
        "documentation_score": 36.0948905109489,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "json",
          "typing",
          "sys",
          "os",
          "pathlib",
          "datetime",
          "traceback",
          "subprocess"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "meta-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T10:15:08.298737",
        "functionality_score": 75.0,
        "documentation_score": 36.83333333333333,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "sys",
          "os",
          "collections",
          "pathlib",
          "datetime",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "parallel-execution-coordinator-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:08.429052",
        "functionality_score": 75.0,
        "documentation_score": 37.046908315565034,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "queue",
          "dataclasses",
          "time",
          "json",
          "typing",
          "sys",
          "os",
          "pathlib",
          "datetime",
          "importlib",
          "concurrent",
          "threading",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "predictive-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T10:15:08.557951",
        "functionality_score": 85.0,
        "documentation_score": 37.28476821192053,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "sys",
          "os",
          "collections",
          "pathlib",
          "statistics",
          "datetime",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "real-time-monitoring-dashboard-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
        "category": "diagnostic",
        "analysis_timestamp": "2025-08-13T10:15:08.763617",
        "functionality_score": 85.0,
        "documentation_score": 36.91897654584221,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "dataclasses",
          "time",
          "json",
          "psutil",
          "typing",
          "pathlib",
          "datetime",
          "asyncio",
          "threading",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "research-information-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
        "category": "research",
        "analysis_timestamp": "2025-08-13T10:15:08.932833",
        "functionality_score": 75.0,
        "documentation_score": 37.24924012158055,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "research_chain",
            "description": "Can be enhanced with pattern recognition and synergy analysis",
            "related_frames": [
              "deep-pattern-recognition-frame.py",
              "synergy-analyzer.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "dataclasses",
          "json",
          "glob",
          "typing",
          "sys",
          "os",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "resource-allocation-engine-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:09.128272",
        "functionality_score": 85.0,
        "documentation_score": 37.5,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "dataclasses",
          "time",
          "uuid",
          "queue",
          "json",
          "psutil",
          "typing",
          "pathlib",
          "datetime",
          "threading",
          "logging"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "security-audit-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
        "category": "security",
        "analysis_timestamp": "2025-08-13T10:15:09.271032",
        "functionality_score": 85.0,
        "documentation_score": 36.65289256198347,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "security_chain",
            "description": "Can be chained with other security frames for comprehensive audit",
            "related_frames": [
              "security-audit-frame.py",
              "risk-assessment-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "dataclasses",
          "json",
          "typing",
          "sys",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "self-healing-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:09.442847",
        "functionality_score": 75.0,
        "documentation_score": 36.25226860254084,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "json",
          "typing",
          "sys",
          "os",
          "pathlib",
          "datetime",
          "traceback",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "universal-task-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T10:15:09.573425",
        "functionality_score": 75.0,
        "documentation_score": 37.01877934272301,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: security_audit_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "dataclasses",
          "research_information_frame",
          "existence_check_frame",
          "json",
          "typing",
          "sys",
          "os",
          "security_audit_frame",
          "datetime",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: existence_check_frame",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: security_audit_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "webhook-endpoint-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T10:15:09.742954",
        "functionality_score": 55.0,
        "documentation_score": 36.5,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [
          "run_webhook_endpoint_analyzer"
        ],
        "dependencies": [
          "re",
          "json",
          "typing",
          "os",
          "pathlib",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-error-detection-frame.cjs",
        "file_path": "scripts\\enhanced-error-detection-frame.cjs",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:09.851637",
        "functionality_score": 55.0,
        "documentation_score": 15.028063610851262,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "error-detection-frame.js",
        "file_path": "scripts\\error-detection-frame.js",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:10.029608",
        "functionality_score": 55.0,
        "documentation_score": 15.062630480167014,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "frame-optimizer.py",
        "file_path": "scripts\\frame-optimizer.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:15:10.165539",
        "functionality_score": 45.0,
        "documentation_score": 16.142857142857142,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [
          {
            "type": "error_handling",
            "description": "Missing error handling in functions",
            "severity": "high"
          },
          {
            "type": "documentation",
            "description": "Missing function documentation",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "json",
          "typing",
          "os",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "framework-validation.js",
        "file_path": "scripts\\framework-validation.js",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T10:15:10.268391",
        "functionality_score": 0.0,
        "documentation_score": 0.0,
        "integration_score": 0.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "autonomous-framework-v2.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T10:16:36.883636",
        "functionality_score": 85.0,
        "documentation_score": 51.858707971288254,
        "integration_score": 100.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "urllib",
          "subprocess",
          "json",
          "tempfile",
          "datetime",
          "typing",
          "sys",
          "dataclasses",
          "os",
          "enum",
          "shutil",
          "re",
          "pathlib",
          "traceback",
          "time",
          "importlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "autonomous-framework.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T10:16:37.250540",
        "functionality_score": 85.0,
        "documentation_score": 51.38977635782747,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "subprocess",
          "json",
          "datetime",
          "typing",
          "sys",
          "dataclasses",
          "os",
          "enum",
          "pathlib",
          "traceback",
          "time",
          "importlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:37.381352",
        "functionality_score": 100.0,
        "documentation_score": 36.54373927958834,
        "integration_score": 65.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 484
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "subprocess",
          "json",
          "logging",
          "datetime",
          "threading",
          "typing",
          "enum",
          "dataclasses",
          "re",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "comprehensive-documentation-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:37.511747",
        "functionality_score": 85.0,
        "documentation_score": 53.00867888138862,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "glob",
          "json",
          "subprocess",
          "inspect",
          "datetime",
          "typing",
          "sys",
          "re",
          "os",
          "dataclasses",
          "ast",
          "enum",
          "pathlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-frame-analyzer.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T10:16:37.688462",
        "functionality_score": 100.0,
        "documentation_score": 52.62969588550984,
        "integration_score": 100.0,
        "risks": [
          {
            "type": "performance",
            "level": "medium",
            "description": "Potential performance issue with large loops",
            "line": 7
          },
          {
            "type": "dependency",
            "level": "medium",
            "description": "Wildcard import - potential namespace pollution",
            "line": 435
          }
        ],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [
          "_identify_pre_hooks"
        ],
        "post_hooks": [
          "_identify_post_hooks"
        ],
        "webhooks": [
          "_identify_pre_hooks",
          "_identify_post_hooks",
          "_identify_webhooks"
        ],
        "dependencies": [
          "glob",
          "json",
          "subprocess",
          "inspect",
          "datetime",
          "typing",
          "sys",
          "dataclasses",
          "os",
          "enum",
          "ast",
          "importlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "cross-agent-communication-protocol-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:37.881095",
        "functionality_score": 85.0,
        "documentation_score": 37.161572052401745,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "logging",
          "datetime",
          "threading",
          "asyncio",
          "typing",
          "uuid",
          "enum",
          "dataclasses",
          "pathlib",
          "time",
          "queue"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "deep-pattern-recognition-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:38.094321",
        "functionality_score": 75.0,
        "documentation_score": 37.24696356275304,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "datetime",
          "typing",
          "re",
          "sys",
          "os",
          "collections",
          "pathlib",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:38.212997",
        "functionality_score": 75.0,
        "documentation_score": 35.29469548133595,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "subprocess",
          "json",
          "logging",
          "concurrent",
          "datetime",
          "typing",
          "enum",
          "dataclasses",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "existence-check-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:38.339996",
        "functionality_score": 85.0,
        "documentation_score": 36.68,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "glob",
          "json",
          "datetime",
          "typing",
          "sys",
          "dataclasses",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filesystem-discovery-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:38.464602",
        "functionality_score": 55.0,
        "documentation_score": 35.54545454545455,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "typing",
          "pathlib",
          "json"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filetree-organizer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:38.546151",
        "functionality_score": 65.0,
        "documentation_score": 36.339285714285715,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "datetime",
          "typing",
          "shutil",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-intelligence-system.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
        "category": "intelligence",
        "analysis_timestamp": "2025-08-13T10:16:38.638446",
        "functionality_score": 75.0,
        "documentation_score": 36.72690763052209,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: universal_task_orchestrator",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "subprocess",
          "universal_task_orchestrator",
          "research_information_frame",
          "datetime",
          "typing",
          "sys",
          "dataclasses",
          "os",
          "enum",
          "existence_check_frame"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: universal_task_orchestrator",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "frame-rationalization-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T10:16:38.798594",
        "functionality_score": 75.0,
        "documentation_score": 37.11267605633803,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "logging",
          "datetime",
          "typing",
          "enum",
          "dataclasses",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "human-approval-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:38.923327",
        "functionality_score": 75.0,
        "documentation_score": 37.201834862385326,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "datetime",
          "typing",
          "sys",
          "os",
          "pathlib",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "hybrid-documentation-tauri-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T10:16:39.035921",
        "functionality_score": 85.0,
        "documentation_score": 35.92511013215859,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "subprocess",
          "datetime",
          "typing",
          "sys",
          "dataclasses",
          "os",
          "enum",
          "shutil",
          "pathlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "import-dependency-graph-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:39.190902",
        "functionality_score": 55.0,
        "documentation_score": 35.46153846153846,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "datetime",
          "typing",
          "re",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "improvement-optimization-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:39.277908",
        "functionality_score": 55.0,
        "documentation_score": 36.504702194357364,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "subprocess",
          "datetime",
          "typing",
          "sys",
          "os",
          "pathlib",
          "traceback"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "index-registrar-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:39.390475",
        "functionality_score": 55.0,
        "documentation_score": 35.625,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "typing",
          "pathlib",
          "json"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "intelligent-caching-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:39.487886",
        "functionality_score": 100.0,
        "documentation_score": 52.123893805309734,
        "integration_score": 70.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 42
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [
          "cleanup_expired",
          "cleanup"
        ],
        "webhooks": [],
        "dependencies": [
          "collections",
          "json",
          "hashlib",
          "datetime",
          "typing",
          "sys",
          "os",
          "shutil",
          "pathlib",
          "traceback",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "knowledge-hub-update-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:39.623887",
        "functionality_score": 75.0,
        "documentation_score": 36.687979539641944,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "hashlib",
          "datetime",
          "typing",
          "sys",
          "os",
          "pathlib",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "log-tailer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:39.740926",
        "functionality_score": 55.0,
        "documentation_score": 36.0948905109489,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "subprocess",
          "datetime",
          "typing",
          "sys",
          "os",
          "pathlib",
          "traceback",
          "time"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "meta-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T10:16:39.848992",
        "functionality_score": 75.0,
        "documentation_score": 36.83333333333333,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "datetime",
          "typing",
          "sys",
          "os",
          "collections",
          "pathlib",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "parallel-execution-coordinator-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:39.989971",
        "functionality_score": 75.0,
        "documentation_score": 37.046908315565034,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "concurrent",
          "importlib",
          "datetime",
          "typing",
          "threading",
          "sys",
          "dataclasses",
          "os",
          "pathlib",
          "traceback",
          "time",
          "queue"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "predictive-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T10:16:40.114081",
        "functionality_score": 85.0,
        "documentation_score": 37.28476821192053,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "datetime",
          "typing",
          "statistics",
          "sys",
          "os",
          "collections",
          "pathlib",
          "traceback"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "real-time-monitoring-dashboard-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
        "category": "diagnostic",
        "analysis_timestamp": "2025-08-13T10:16:40.257462",
        "functionality_score": 85.0,
        "documentation_score": 36.91897654584221,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "psutil",
          "json",
          "subprocess",
          "datetime",
          "typing",
          "asyncio",
          "threading",
          "dataclasses",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "research-information-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
        "category": "research",
        "analysis_timestamp": "2025-08-13T10:16:40.421673",
        "functionality_score": 75.0,
        "documentation_score": 37.24924012158055,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "research_chain",
            "description": "Can be enhanced with pattern recognition and synergy analysis",
            "related_frames": [
              "deep-pattern-recognition-frame.py",
              "synergy-analyzer.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "glob",
          "json",
          "datetime",
          "typing",
          "sys",
          "dataclasses",
          "os"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "resource-allocation-engine-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:40.616709",
        "functionality_score": 85.0,
        "documentation_score": 37.5,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "psutil",
          "json",
          "logging",
          "datetime",
          "threading",
          "typing",
          "uuid",
          "enum",
          "dataclasses",
          "pathlib",
          "time",
          "queue"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "security-audit-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
        "category": "security",
        "analysis_timestamp": "2025-08-13T10:16:40.768794",
        "functionality_score": 85.0,
        "documentation_score": 36.65289256198347,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "security_chain",
            "description": "Can be chained with other security frames for comprehensive audit",
            "related_frames": [
              "security-audit-frame.py",
              "risk-assessment-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "datetime",
          "typing",
          "sys",
          "dataclasses"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "self-healing-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:40.930276",
        "functionality_score": 75.0,
        "documentation_score": 36.25226860254084,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "subprocess",
          "datetime",
          "typing",
          "sys",
          "os",
          "pathlib",
          "traceback",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "universal-task-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T10:16:41.095911",
        "functionality_score": 75.0,
        "documentation_score": 37.01877934272301,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: security_audit_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "subprocess",
          "json",
          "research_information_frame",
          "datetime",
          "typing",
          "sys",
          "dataclasses",
          "os",
          "enum",
          "security_audit_frame",
          "existence_check_frame"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: existence_check_frame",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: security_audit_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "webhook-endpoint-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T10:16:41.272909",
        "functionality_score": 55.0,
        "documentation_score": 36.5,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [
          "run_webhook_endpoint_analyzer"
        ],
        "dependencies": [
          "json",
          "datetime",
          "typing",
          "re",
          "os",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-error-detection-frame.cjs",
        "file_path": "scripts\\enhanced-error-detection-frame.cjs",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:41.389867",
        "functionality_score": 55.0,
        "documentation_score": 15.028063610851262,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "error-detection-frame.js",
        "file_path": "scripts\\error-detection-frame.js",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:41.594130",
        "functionality_score": 55.0,
        "documentation_score": 15.062630480167014,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "frame-optimizer.py",
        "file_path": "scripts\\frame-optimizer.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T10:16:41.744464",
        "functionality_score": 45.0,
        "documentation_score": 16.142857142857142,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [
          {
            "type": "error_handling",
            "description": "Missing error handling in functions",
            "severity": "high"
          },
          {
            "type": "documentation",
            "description": "Missing function documentation",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "re",
          "os",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "framework-validation.js",
        "file_path": "scripts\\framework-validation.js",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T10:16:41.848885",
        "functionality_score": 0.0,
        "documentation_score": 0.0,
        "integration_score": 0.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "autonomous-framework-v2.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:28:43.673394",
        "functionality_score": 85.0,
        "documentation_score": 51.858707971288254,
        "integration_score": 100.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "subprocess",
          "datetime",
          "traceback",
          "dataclasses",
          "re",
          "json",
          "shutil",
          "tempfile",
          "enum",
          "importlib",
          "os",
          "urllib",
          "sys",
          "typing",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "autonomous-framework.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:28:44.430503",
        "functionality_score": 85.0,
        "documentation_score": 51.38977635782747,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "subprocess",
          "datetime",
          "traceback",
          "dataclasses",
          "json",
          "enum",
          "importlib",
          "os",
          "sys",
          "typing",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:44.596657",
        "functionality_score": 100.0,
        "documentation_score": 36.54373927958834,
        "integration_score": 65.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 484
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "subprocess",
          "datetime",
          "dataclasses",
          "re",
          "json",
          "enum",
          "threading",
          "typing",
          "logging",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "comprehensive-documentation-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:44.749771",
        "functionality_score": 85.0,
        "documentation_score": 53.00867888138862,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "subprocess",
          "ast",
          "re",
          "dataclasses",
          "json",
          "enum",
          "inspect",
          "os",
          "glob",
          "sys",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-frame-analyzer.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:28:44.980018",
        "functionality_score": 100.0,
        "documentation_score": 52.62969588550984,
        "integration_score": 100.0,
        "risks": [
          {
            "type": "performance",
            "level": "medium",
            "description": "Potential performance issue with large loops",
            "line": 7
          },
          {
            "type": "dependency",
            "level": "medium",
            "description": "Wildcard import - potential namespace pollution",
            "line": 435
          }
        ],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [
          "_identify_pre_hooks"
        ],
        "post_hooks": [
          "_identify_post_hooks"
        ],
        "webhooks": [
          "_identify_pre_hooks",
          "_identify_post_hooks",
          "_identify_webhooks"
        ],
        "dependencies": [
          "datetime",
          "subprocess",
          "ast",
          "dataclasses",
          "json",
          "enum",
          "inspect",
          "importlib",
          "os",
          "glob",
          "sys",
          "typing"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "cross-agent-communication-protocol-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:45.181941",
        "functionality_score": 85.0,
        "documentation_score": 37.161572052401745,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "dataclasses",
          "queue",
          "json",
          "asyncio",
          "enum",
          "threading",
          "uuid",
          "typing",
          "logging",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "deep-pattern-recognition-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:45.567473",
        "functionality_score": 75.0,
        "documentation_score": 37.24696356275304,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "traceback",
          "re",
          "collections",
          "json",
          "os",
          "sys",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:45.718751",
        "functionality_score": 75.0,
        "documentation_score": 35.29469548133595,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "subprocess",
          "datetime",
          "dataclasses",
          "json",
          "enum",
          "concurrent",
          "typing",
          "logging",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "existence-check-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:45.876237",
        "functionality_score": 85.0,
        "documentation_score": 36.68,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "dataclasses",
          "json",
          "os",
          "glob",
          "sys",
          "typing"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filesystem-discovery-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:46.027069",
        "functionality_score": 55.0,
        "documentation_score": 35.54545454545455,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filetree-organizer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:46.127563",
        "functionality_score": 65.0,
        "documentation_score": 36.339285714285715,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "json",
          "shutil",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-intelligence-system.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
        "category": "intelligence",
        "analysis_timestamp": "2025-08-13T11:28:46.229822",
        "functionality_score": 75.0,
        "documentation_score": 36.72690763052209,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: universal_task_orchestrator",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "subprocess",
          "dataclasses",
          "research_information_frame",
          "json",
          "universal_task_orchestrator",
          "enum",
          "os",
          "sys",
          "typing",
          "existence_check_frame"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: universal_task_orchestrator",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "frame-rationalization-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:28:46.402946",
        "functionality_score": 75.0,
        "documentation_score": 37.11267605633803,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "dataclasses",
          "json",
          "enum",
          "typing",
          "logging",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "human-approval-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:46.551570",
        "functionality_score": 75.0,
        "documentation_score": 37.201834862385326,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "traceback",
          "json",
          "os",
          "sys",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "hybrid-documentation-tauri-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T11:28:46.684976",
        "functionality_score": 85.0,
        "documentation_score": 35.92511013215859,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "subprocess",
          "dataclasses",
          "json",
          "shutil",
          "enum",
          "os",
          "sys",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "import-dependency-graph-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:46.865900",
        "functionality_score": 55.0,
        "documentation_score": 35.46153846153846,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "re",
          "json",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "improvement-optimization-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:46.971574",
        "functionality_score": 55.0,
        "documentation_score": 36.504702194357364,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "subprocess",
          "traceback",
          "json",
          "os",
          "sys",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "index-registrar-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:47.112060",
        "functionality_score": 55.0,
        "documentation_score": 35.625,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "intelligent-caching-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:47.216444",
        "functionality_score": 100.0,
        "documentation_score": 52.123893805309734,
        "integration_score": 70.0,
        "risks": [
          {
            "type": "error_handling",
            "level": "high",
            "description": "Bare except clause - may mask important errors",
            "line": 42
          }
        ],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [
          "cleanup_expired",
          "cleanup"
        ],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "traceback",
          "collections",
          "json",
          "shutil",
          "os",
          "hashlib",
          "sys",
          "typing",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": [
          "Address high risk: Bare except clause - may mask important errors"
        ]
      },
      {
        "frame_name": "knowledge-hub-update-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:47.413175",
        "functionality_score": 75.0,
        "documentation_score": 36.687979539641944,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "traceback",
          "json",
          "os",
          "hashlib",
          "sys",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "log-tailer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:47.560350",
        "functionality_score": 55.0,
        "documentation_score": 36.0948905109489,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "traceback",
          "subprocess",
          "json",
          "os",
          "sys",
          "typing",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "meta-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:28:47.672002",
        "functionality_score": 75.0,
        "documentation_score": 36.83333333333333,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "traceback",
          "collections",
          "json",
          "os",
          "sys",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "parallel-execution-coordinator-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:47.820391",
        "functionality_score": 75.0,
        "documentation_score": 37.046908315565034,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "traceback",
          "queue",
          "dataclasses",
          "json",
          "concurrent",
          "importlib",
          "os",
          "threading",
          "sys",
          "typing",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "predictive-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:28:47.994209",
        "functionality_score": 85.0,
        "documentation_score": 37.28476821192053,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "traceback",
          "collections",
          "json",
          "statistics",
          "os",
          "sys",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "real-time-monitoring-dashboard-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
        "category": "diagnostic",
        "analysis_timestamp": "2025-08-13T11:28:48.229886",
        "functionality_score": 85.0,
        "documentation_score": 36.91897654584221,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "subprocess",
          "dataclasses",
          "json",
          "asyncio",
          "psutil",
          "threading",
          "typing",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "research-information-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
        "category": "research",
        "analysis_timestamp": "2025-08-13T11:28:48.444338",
        "functionality_score": 75.0,
        "documentation_score": 37.24924012158055,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "research_chain",
            "description": "Can be enhanced with pattern recognition and synergy analysis",
            "related_frames": [
              "deep-pattern-recognition-frame.py",
              "synergy-analyzer.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "dataclasses",
          "json",
          "os",
          "glob",
          "sys",
          "typing"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "resource-allocation-engine-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:48.699249",
        "functionality_score": 85.0,
        "documentation_score": 37.5,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "dataclasses",
          "queue",
          "json",
          "enum",
          "psutil",
          "threading",
          "uuid",
          "typing",
          "logging",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "security-audit-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
        "category": "security",
        "analysis_timestamp": "2025-08-13T11:28:48.881929",
        "functionality_score": 85.0,
        "documentation_score": 36.65289256198347,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "security_chain",
            "description": "Can be chained with other security frames for comprehensive audit",
            "related_frames": [
              "security-audit-frame.py",
              "risk-assessment-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "dataclasses",
          "json",
          "sys",
          "typing"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "self-healing-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:49.070955",
        "functionality_score": 75.0,
        "documentation_score": 36.25226860254084,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "traceback",
          "subprocess",
          "json",
          "os",
          "sys",
          "typing",
          "pathlib",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "universal-task-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T11:28:49.250919",
        "functionality_score": 75.0,
        "documentation_score": 37.01877934272301,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: research_information_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: security_audit_frame",
            "severity": "high"
          },
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "subprocess",
          "dataclasses",
          "research_information_frame",
          "security_audit_frame",
          "json",
          "enum",
          "os",
          "sys",
          "typing",
          "existence_check_frame"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: existence_check_frame",
          "Resolve blocker: Missing module: research_information_frame",
          "Resolve blocker: Missing module: security_audit_frame",
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "webhook-endpoint-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:28:49.442914",
        "functionality_score": 55.0,
        "documentation_score": 36.5,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [
          "run_webhook_endpoint_analyzer"
        ],
        "dependencies": [
          "datetime",
          "re",
          "json",
          "os",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-error-detection-frame.cjs",
        "file_path": "scripts\\enhanced-error-detection-frame.cjs",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:49.570953",
        "functionality_score": 55.0,
        "documentation_score": 15.028063610851262,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "error-detection-frame.js",
        "file_path": "scripts\\error-detection-frame.js",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:49.806645",
        "functionality_score": 55.0,
        "documentation_score": 15.062630480167014,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "frame-optimizer.py",
        "file_path": "scripts\\frame-optimizer.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:28:49.963821",
        "functionality_score": 45.0,
        "documentation_score": 16.142857142857142,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [
          {
            "type": "error_handling",
            "description": "Missing error handling in functions",
            "severity": "high"
          },
          {
            "type": "documentation",
            "description": "Missing function documentation",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "re",
          "json",
          "os",
          "typing",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "framework-validation.js",
        "file_path": "scripts\\framework-validation.js",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:28:50.085693",
        "functionality_score": 0.0,
        "documentation_score": 0.0,
        "integration_score": 0.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "autonomous-framework-v2.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:35:36.379251",
        "functionality_score": 85.0,
        "documentation_score": 51.858707971288254,
        "integration_score": 100.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "time",
          "pathlib",
          "enum",
          "importlib",
          "traceback",
          "tempfile",
          "json",
          "urllib",
          "re",
          "subprocess",
          "sys",
          "typing",
          "dataclasses",
          "shutil",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "autonomous-framework.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:35:37.315419",
        "functionality_score": 85.0,
        "documentation_score": 51.38977635782747,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "time",
          "pathlib",
          "enum",
          "importlib",
          "traceback",
          "json",
          "subprocess",
          "sys",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:37.537673",
        "functionality_score": 85.0,
        "documentation_score": 36.54373927958834,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "pathlib",
          "enum",
          "json",
          "logging",
          "re",
          "threading",
          "subprocess",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-documentation-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:37.736463",
        "functionality_score": 85.0,
        "documentation_score": 53.00867888138862,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "enum",
          "pathlib",
          "glob",
          "inspect",
          "json",
          "subprocess",
          "sys",
          "ast",
          "re",
          "dataclasses",
          "typing",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-frame-analyzer.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:35:37.984863",
        "functionality_score": 100.0,
        "documentation_score": 52.62969588550984,
        "integration_score": 100.0,
        "risks": [
          {
            "type": "performance",
            "level": "medium",
            "description": "Potential performance issue with large loops",
            "line": 7
          },
          {
            "type": "dependency",
            "level": "medium",
            "description": "Wildcard import - potential namespace pollution",
            "line": 435
          }
        ],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [
          "_identify_pre_hooks"
        ],
        "post_hooks": [
          "_identify_post_hooks"
        ],
        "webhooks": [
          "_identify_pre_hooks",
          "_identify_post_hooks",
          "_identify_webhooks"
        ],
        "dependencies": [
          "os",
          "enum",
          "importlib",
          "inspect",
          "glob",
          "json",
          "subprocess",
          "sys",
          "ast",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "cross-agent-communication-protocol-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:38.230056",
        "functionality_score": 85.0,
        "documentation_score": 37.161572052401745,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "pathlib",
          "enum",
          "json",
          "logging",
          "queue",
          "threading",
          "asyncio",
          "typing",
          "dataclasses",
          "uuid",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "deep-pattern-recognition-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:38.670390",
        "functionality_score": 75.0,
        "documentation_score": 37.24696356275304,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "traceback",
          "json",
          "sys",
          "typing",
          "re",
          "collections",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:38.840277",
        "functionality_score": 75.0,
        "documentation_score": 35.29469548133595,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "pathlib",
          "enum",
          "concurrent",
          "json",
          "logging",
          "subprocess",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "existence-check-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:39.035254",
        "functionality_score": 85.0,
        "documentation_score": 36.68,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "glob",
          "json",
          "sys",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filesystem-discovery-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:39.207856",
        "functionality_score": 55.0,
        "documentation_score": 35.54545454545455,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "pathlib",
          "json",
          "typing",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filetree-organizer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:39.330421",
        "functionality_score": 65.0,
        "documentation_score": 36.339285714285715,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "pathlib",
          "json",
          "typing",
          "shutil",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-intelligence-system.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
        "category": "intelligence",
        "analysis_timestamp": "2025-08-13T11:35:39.465583",
        "functionality_score": 75.0,
        "documentation_score": 36.699604743083,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "enum",
          "importlib",
          "json",
          "subprocess",
          "sys",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-rationalization-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:35:39.685633",
        "functionality_score": 75.0,
        "documentation_score": 37.11267605633803,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "pathlib",
          "enum",
          "json",
          "logging",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "human-approval-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:39.861131",
        "functionality_score": 75.0,
        "documentation_score": 37.201834862385326,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "traceback",
          "json",
          "sys",
          "typing",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "hybrid-documentation-tauri-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T11:35:40.018262",
        "functionality_score": 85.0,
        "documentation_score": 35.92511013215859,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "enum",
          "pathlib",
          "json",
          "subprocess",
          "sys",
          "dataclasses",
          "typing",
          "shutil",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "import-dependency-graph-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:40.247707",
        "functionality_score": 55.0,
        "documentation_score": 35.46153846153846,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "pathlib",
          "json",
          "typing",
          "re",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "improvement-optimization-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:40.382590",
        "functionality_score": 55.0,
        "documentation_score": 36.504702194357364,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "traceback",
          "json",
          "subprocess",
          "sys",
          "typing",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "index-registrar-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:40.547134",
        "functionality_score": 55.0,
        "documentation_score": 35.625,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "pathlib",
          "json",
          "typing",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "intelligent-caching-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:40.668212",
        "functionality_score": 85.0,
        "documentation_score": 52.123893805309734,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [
          "cleanup_expired",
          "cleanup"
        ],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "traceback",
          "time",
          "shutil",
          "json",
          "sys",
          "typing",
          "hashlib",
          "collections",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "knowledge-hub-update-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:40.870386",
        "functionality_score": 75.0,
        "documentation_score": 36.687979539641944,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "traceback",
          "json",
          "sys",
          "typing",
          "hashlib",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "log-tailer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:41.037475",
        "functionality_score": 55.0,
        "documentation_score": 36.0948905109489,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "time",
          "pathlib",
          "traceback",
          "json",
          "subprocess",
          "sys",
          "typing",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "meta-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:35:41.175558",
        "functionality_score": 75.0,
        "documentation_score": 36.83333333333333,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "traceback",
          "json",
          "sys",
          "typing",
          "collections",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "parallel-execution-coordinator-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:41.351781",
        "functionality_score": 75.0,
        "documentation_score": 37.046908315565034,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "traceback",
          "time",
          "importlib",
          "concurrent",
          "json",
          "queue",
          "threading",
          "sys",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "predictive-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:35:41.529804",
        "functionality_score": 85.0,
        "documentation_score": 37.28476821192053,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "traceback",
          "json",
          "sys",
          "typing",
          "statistics",
          "collections",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "real-time-monitoring-dashboard-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
        "category": "diagnostic",
        "analysis_timestamp": "2025-08-13T11:35:41.761360",
        "functionality_score": 85.0,
        "documentation_score": 36.91897654584221,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "pathlib",
          "json",
          "threading",
          "asyncio",
          "subprocess",
          "psutil",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "research-information-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
        "category": "research",
        "analysis_timestamp": "2025-08-13T11:35:41.980421",
        "functionality_score": 75.0,
        "documentation_score": 37.24924012158055,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "research_chain",
            "description": "Can be enhanced with pattern recognition and synergy analysis",
            "related_frames": [
              "deep-pattern-recognition-frame.py",
              "synergy-analyzer.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "glob",
          "json",
          "sys",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "resource-allocation-engine-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:42.250315",
        "functionality_score": 85.0,
        "documentation_score": 37.5,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "time",
          "pathlib",
          "enum",
          "json",
          "logging",
          "queue",
          "threading",
          "psutil",
          "typing",
          "dataclasses",
          "uuid",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "security-audit-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
        "category": "security",
        "analysis_timestamp": "2025-08-13T11:35:42.452525",
        "functionality_score": 85.0,
        "documentation_score": 36.65289256198347,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "security_chain",
            "description": "Can be chained with other security frames for comprehensive audit",
            "related_frames": [
              "security-audit-frame.py",
              "risk-assessment-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "sys",
          "dataclasses",
          "typing",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "self-healing-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:42.661276",
        "functionality_score": 75.0,
        "documentation_score": 36.25226860254084,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "traceback",
          "time",
          "json",
          "subprocess",
          "sys",
          "typing",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "universal-task-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T11:35:42.858113",
        "functionality_score": 75.0,
        "documentation_score": 36.9815668202765,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "enum",
          "importlib",
          "json",
          "subprocess",
          "existence_check_frame",
          "sys",
          "typing",
          "dataclasses",
          "datetime"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "webhook-endpoint-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:35:43.074292",
        "functionality_score": 55.0,
        "documentation_score": 36.5,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [
          "run_webhook_endpoint_analyzer"
        ],
        "dependencies": [
          "os",
          "pathlib",
          "json",
          "typing",
          "re",
          "datetime"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-error-detection-frame.cjs",
        "file_path": "scripts\\enhanced-error-detection-frame.cjs",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:43.214517",
        "functionality_score": 55.0,
        "documentation_score": 15.028063610851262,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "error-detection-frame.js",
        "file_path": "scripts\\error-detection-frame.js",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:43.466698",
        "functionality_score": 55.0,
        "documentation_score": 15.062630480167014,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "frame-optimizer.py",
        "file_path": "scripts\\frame-optimizer.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:35:43.640574",
        "functionality_score": 45.0,
        "documentation_score": 16.142857142857142,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [
          {
            "type": "error_handling",
            "description": "Missing error handling in functions",
            "severity": "high"
          },
          {
            "type": "documentation",
            "description": "Missing function documentation",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "json",
          "typing",
          "re"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "framework-validation.js",
        "file_path": "scripts\\framework-validation.js",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:35:43.781450",
        "functionality_score": 0.0,
        "documentation_score": 0.0,
        "integration_score": 0.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "autonomous-framework-v2.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:37:09.058124",
        "functionality_score": 85.0,
        "documentation_score": 51.858707971288254,
        "integration_score": 100.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "importlib",
          "tempfile",
          "enum",
          "os",
          "subprocess",
          "urllib",
          "json",
          "pathlib",
          "datetime",
          "shutil",
          "dataclasses",
          "traceback",
          "typing",
          "re",
          "sys",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "autonomous-framework.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:37:09.787924",
        "functionality_score": 85.0,
        "documentation_score": 51.38977635782747,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "importlib",
          "enum",
          "os",
          "subprocess",
          "json",
          "pathlib",
          "datetime",
          "dataclasses",
          "traceback",
          "typing",
          "sys",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:10.044439",
        "functionality_score": 85.0,
        "documentation_score": 36.54373927958834,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "logging",
          "enum",
          "subprocess",
          "json",
          "pathlib",
          "threading",
          "datetime",
          "dataclasses",
          "re",
          "typing",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-documentation-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:10.318940",
        "functionality_score": 85.0,
        "documentation_score": 53.00867888138862,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "os",
          "subprocess",
          "json",
          "glob",
          "ast",
          "pathlib",
          "datetime",
          "inspect",
          "dataclasses",
          "typing",
          "re",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-frame-analyzer.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:37:10.671397",
        "functionality_score": 100.0,
        "documentation_score": 52.62969588550984,
        "integration_score": 100.0,
        "risks": [
          {
            "type": "performance",
            "level": "medium",
            "description": "Potential performance issue with large loops",
            "line": 7
          },
          {
            "type": "dependency",
            "level": "medium",
            "description": "Wildcard import - potential namespace pollution",
            "line": 435
          }
        ],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [
          "_identify_pre_hooks"
        ],
        "post_hooks": [
          "_identify_post_hooks"
        ],
        "webhooks": [
          "_identify_pre_hooks",
          "_identify_post_hooks",
          "_identify_webhooks"
        ],
        "dependencies": [
          "importlib",
          "enum",
          "os",
          "subprocess",
          "json",
          "glob",
          "ast",
          "datetime",
          "inspect",
          "dataclasses",
          "typing",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "cross-agent-communication-protocol-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:11.149652",
        "functionality_score": 85.0,
        "documentation_score": 37.161572052401745,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "asyncio",
          "logging",
          "enum",
          "uuid",
          "json",
          "pathlib",
          "threading",
          "datetime",
          "dataclasses",
          "queue",
          "typing",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "deep-pattern-recognition-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:11.740861",
        "functionality_score": 75.0,
        "documentation_score": 37.24696356275304,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "json",
          "collections",
          "datetime",
          "traceback",
          "typing",
          "re",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:12.146372",
        "functionality_score": 75.0,
        "documentation_score": 35.29469548133595,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "logging",
          "enum",
          "subprocess",
          "pathlib",
          "json",
          "datetime",
          "concurrent",
          "dataclasses",
          "typing",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "existence-check-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:12.529392",
        "functionality_score": 85.0,
        "documentation_score": 36.68,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "glob",
          "json",
          "datetime",
          "dataclasses",
          "typing",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filesystem-discovery-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:12.890984",
        "functionality_score": 55.0,
        "documentation_score": 35.54545454545455,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "pathlib",
          "typing",
          "json"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filetree-organizer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:13.116636",
        "functionality_score": 65.0,
        "documentation_score": 36.339285714285715,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "pathlib",
          "json",
          "datetime",
          "shutil",
          "typing"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-intelligence-system.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
        "category": "intelligence",
        "analysis_timestamp": "2025-08-13T11:37:13.370104",
        "functionality_score": 75.0,
        "documentation_score": 36.699604743083,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "importlib",
          "enum",
          "os",
          "subprocess",
          "json",
          "datetime",
          "dataclasses",
          "typing"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-rationalization-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:37:13.788776",
        "functionality_score": 75.0,
        "documentation_score": 37.11267605633803,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "logging",
          "enum",
          "pathlib",
          "json",
          "datetime",
          "dataclasses",
          "typing",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "human-approval-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:14.149095",
        "functionality_score": 75.0,
        "documentation_score": 37.201834862385326,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "json",
          "datetime",
          "traceback",
          "typing",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "hybrid-documentation-tauri-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T11:37:14.487583",
        "functionality_score": 85.0,
        "documentation_score": 35.92511013215859,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "enum",
          "os",
          "subprocess",
          "json",
          "pathlib",
          "datetime",
          "shutil",
          "dataclasses",
          "typing",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "import-dependency-graph-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:14.942225",
        "functionality_score": 55.0,
        "documentation_score": 35.46153846153846,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "pathlib",
          "json",
          "datetime",
          "re",
          "typing"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "improvement-optimization-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:15.221443",
        "functionality_score": 55.0,
        "documentation_score": 36.504702194357364,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "subprocess",
          "pathlib",
          "json",
          "datetime",
          "traceback",
          "typing",
          "sys"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "index-registrar-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:15.562375",
        "functionality_score": 55.0,
        "documentation_score": 35.625,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "datetime",
          "pathlib",
          "typing",
          "json"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "intelligent-caching-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:15.815416",
        "functionality_score": 85.0,
        "documentation_score": 52.123893805309734,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [
          "cleanup_expired",
          "cleanup"
        ],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "json",
          "collections",
          "datetime",
          "shutil",
          "hashlib",
          "traceback",
          "typing",
          "sys",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "knowledge-hub-update-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:16.203073",
        "functionality_score": 75.0,
        "documentation_score": 36.687979539641944,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "json",
          "datetime",
          "hashlib",
          "traceback",
          "typing",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "log-tailer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:16.576291",
        "functionality_score": 55.0,
        "documentation_score": 36.0948905109489,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "subprocess",
          "pathlib",
          "json",
          "datetime",
          "traceback",
          "typing",
          "sys",
          "time"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "meta-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:37:16.886995",
        "functionality_score": 75.0,
        "documentation_score": 36.83333333333333,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "json",
          "collections",
          "datetime",
          "traceback",
          "typing",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "parallel-execution-coordinator-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:17.246335",
        "functionality_score": 75.0,
        "documentation_score": 37.046908315565034,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "importlib",
          "os",
          "pathlib",
          "json",
          "threading",
          "datetime",
          "concurrent",
          "dataclasses",
          "traceback",
          "typing",
          "queue",
          "sys",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "predictive-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:37:17.636687",
        "functionality_score": 85.0,
        "documentation_score": 37.28476821192053,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "statistics",
          "os",
          "pathlib",
          "json",
          "collections",
          "datetime",
          "traceback",
          "typing",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "real-time-monitoring-dashboard-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
        "category": "diagnostic",
        "analysis_timestamp": "2025-08-13T11:37:18.067163",
        "functionality_score": 85.0,
        "documentation_score": 36.91897654584221,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "asyncio",
          "subprocess",
          "json",
          "pathlib",
          "threading",
          "psutil",
          "datetime",
          "dataclasses",
          "typing",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "research-information-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
        "category": "research",
        "analysis_timestamp": "2025-08-13T11:37:18.480150",
        "functionality_score": 75.0,
        "documentation_score": 37.24924012158055,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "research_chain",
            "description": "Can be enhanced with pattern recognition and synergy analysis",
            "related_frames": [
              "deep-pattern-recognition-frame.py",
              "synergy-analyzer.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "sys",
          "os",
          "json",
          "glob",
          "datetime",
          "dataclasses",
          "typing"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "resource-allocation-engine-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:19.011257",
        "functionality_score": 85.0,
        "documentation_score": 37.5,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "logging",
          "enum",
          "uuid",
          "json",
          "pathlib",
          "threading",
          "psutil",
          "datetime",
          "dataclasses",
          "queue",
          "typing",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "security-audit-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
        "category": "security",
        "analysis_timestamp": "2025-08-13T11:37:19.415704",
        "functionality_score": 85.0,
        "documentation_score": 36.65289256198347,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "security_chain",
            "description": "Can be chained with other security frames for comprehensive audit",
            "related_frames": [
              "security-audit-frame.py",
              "risk-assessment-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "datetime",
          "dataclasses",
          "typing",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "self-healing-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:19.931348",
        "functionality_score": 75.0,
        "documentation_score": 36.25226860254084,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "subprocess",
          "pathlib",
          "json",
          "datetime",
          "traceback",
          "typing",
          "sys",
          "time"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "universal-task-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T11:37:20.337335",
        "functionality_score": 75.0,
        "documentation_score": 37.0,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "importlib",
          "enum",
          "os",
          "subprocess",
          "json",
          "datetime",
          "existence_check_frame",
          "dataclasses",
          "typing",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "webhook-endpoint-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:37:20.765440",
        "functionality_score": 55.0,
        "documentation_score": 36.5,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [
          "run_webhook_endpoint_analyzer"
        ],
        "dependencies": [
          "os",
          "pathlib",
          "json",
          "datetime",
          "re",
          "typing"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-error-detection-frame.cjs",
        "file_path": "scripts\\enhanced-error-detection-frame.cjs",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:21.115896",
        "functionality_score": 55.0,
        "documentation_score": 15.028063610851262,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "error-detection-frame.js",
        "file_path": "scripts\\error-detection-frame.js",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:21.684914",
        "functionality_score": 55.0,
        "documentation_score": 15.062630480167014,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "frame-optimizer.py",
        "file_path": "scripts\\frame-optimizer.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:37:22.009525",
        "functionality_score": 45.0,
        "documentation_score": 16.142857142857142,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [
          {
            "type": "error_handling",
            "description": "Missing error handling in functions",
            "severity": "high"
          },
          {
            "type": "documentation",
            "description": "Missing function documentation",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "os",
          "pathlib",
          "json",
          "re",
          "typing"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "framework-validation.js",
        "file_path": "scripts\\framework-validation.js",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:37:22.245524",
        "functionality_score": 0.0,
        "documentation_score": 0.0,
        "integration_score": 0.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "autonomous-framework-v2.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework-v2.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:56:03.028224",
        "functionality_score": 85.0,
        "documentation_score": 51.858707971288254,
        "integration_score": 100.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "re",
          "typing",
          "datetime",
          "os",
          "dataclasses",
          "tempfile",
          "enum",
          "importlib",
          "pathlib",
          "urllib",
          "traceback",
          "shutil",
          "sys",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "autonomous-framework.py",
        "file_path": "OCTOSPINE/TECHNICAL/autonomous-framework\\autonomous-framework.py",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:56:03.736604",
        "functionality_score": 85.0,
        "documentation_score": 51.38977635782747,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "typing",
          "datetime",
          "os",
          "dataclasses",
          "enum",
          "importlib",
          "pathlib",
          "traceback",
          "sys",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:03.991677",
        "functionality_score": 85.0,
        "documentation_score": 36.54373927958834,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "re",
          "typing",
          "datetime",
          "dataclasses",
          "enum",
          "logging",
          "pathlib",
          "subprocess",
          "threading"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-documentation-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-documentation-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:04.237430",
        "functionality_score": 85.0,
        "documentation_score": 53.00867888138862,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "re",
          "typing",
          "inspect",
          "os",
          "datetime",
          "dataclasses",
          "glob",
          "enum",
          "ast",
          "pathlib",
          "sys",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "comprehensive-frame-analyzer.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\comprehensive-frame-analyzer.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:56:04.585713",
        "functionality_score": 100.0,
        "documentation_score": 52.62969588550984,
        "integration_score": 100.0,
        "risks": [
          {
            "type": "performance",
            "level": "medium",
            "description": "Potential performance issue with large loops",
            "line": 7
          },
          {
            "type": "dependency",
            "level": "medium",
            "description": "Wildcard import - potential namespace pollution",
            "line": 435
          }
        ],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [
          "_identify_pre_hooks"
        ],
        "post_hooks": [
          "_identify_post_hooks"
        ],
        "webhooks": [
          "_identify_pre_hooks",
          "_identify_post_hooks",
          "_identify_webhooks"
        ],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "os",
          "inspect",
          "dataclasses",
          "glob",
          "enum",
          "ast",
          "importlib",
          "sys",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "cross-agent-communication-protocol-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\cross-agent-communication-protocol-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:04.917647",
        "functionality_score": 85.0,
        "documentation_score": 37.161572052401745,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "typing",
          "queue",
          "datetime",
          "dataclasses",
          "enum",
          "asyncio",
          "logging",
          "pathlib",
          "uuid",
          "threading"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "deep-pattern-recognition-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\deep-pattern-recognition-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:05.419994",
        "functionality_score": 75.0,
        "documentation_score": 37.24696356275304,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "re",
          "typing",
          "datetime",
          "os",
          "pathlib",
          "traceback",
          "sys",
          "collections"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-multi-language-dependency-manager-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\enhanced-multi-language-dependency-manager-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:05.658368",
        "functionality_score": 75.0,
        "documentation_score": 35.29469548133595,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "concurrent",
          "typing",
          "datetime",
          "dataclasses",
          "enum",
          "logging",
          "pathlib",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "existence-check-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\existence-check-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:05.897808",
        "functionality_score": 85.0,
        "documentation_score": 36.68,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "os",
          "dataclasses",
          "glob",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filesystem-discovery-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filesystem-discovery-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:06.146662",
        "functionality_score": 55.0,
        "documentation_score": 35.54545454545455,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "filetree-organizer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\filetree-organizer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:06.347798",
        "functionality_score": 65.0,
        "documentation_score": 36.339285714285715,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "pathlib",
          "shutil"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-intelligence-system.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-intelligence-system.py",
        "category": "intelligence",
        "analysis_timestamp": "2025-08-13T11:56:06.530573",
        "functionality_score": 75.0,
        "documentation_score": 36.699604743083,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "os",
          "dataclasses",
          "enum",
          "importlib",
          "sys",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "frame-rationalization-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\frame-rationalization-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:56:06.858051",
        "functionality_score": 75.0,
        "documentation_score": 37.11267605633803,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "typing",
          "datetime",
          "dataclasses",
          "enum",
          "logging",
          "pathlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "human-approval-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\human-approval-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:07.112233",
        "functionality_score": 75.0,
        "documentation_score": 37.201834862385326,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "os",
          "pathlib",
          "traceback",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "hybrid-documentation-tauri-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\hybrid-documentation-tauri-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T11:56:07.369009",
        "functionality_score": 85.0,
        "documentation_score": 35.92511013215859,
        "integration_score": 65.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "dataclasses",
          "os",
          "enum",
          "pathlib",
          "shutil",
          "sys",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "import-dependency-graph-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\import-dependency-graph-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:07.683300",
        "functionality_score": 55.0,
        "documentation_score": 35.46153846153846,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "re",
          "typing",
          "datetime",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "improvement-optimization-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\improvement-optimization-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:07.866573",
        "functionality_score": 55.0,
        "documentation_score": 36.504702194357364,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "os",
          "pathlib",
          "traceback",
          "sys",
          "subprocess"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "index-registrar-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\index-registrar-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:08.120338",
        "functionality_score": 55.0,
        "documentation_score": 35.625,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "pathlib"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "intelligent-caching-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\intelligent-caching-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:08.312604",
        "functionality_score": 85.0,
        "documentation_score": 52.123893805309734,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [
          "cleanup_expired",
          "cleanup"
        ],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "typing",
          "datetime",
          "os",
          "pathlib",
          "traceback",
          "shutil",
          "sys",
          "collections",
          "hashlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "knowledge-hub-update-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\knowledge-hub-update-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:08.608721",
        "functionality_score": 75.0,
        "documentation_score": 36.687979539641944,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "os",
          "pathlib",
          "traceback",
          "sys",
          "hashlib"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "log-tailer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\log-tailer-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:08.861744",
        "functionality_score": 55.0,
        "documentation_score": 36.0948905109489,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "typing",
          "datetime",
          "os",
          "pathlib",
          "traceback",
          "sys",
          "subprocess"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "meta-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\meta-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:56:09.067856",
        "functionality_score": 75.0,
        "documentation_score": 36.83333333333333,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "os",
          "pathlib",
          "traceback",
          "sys",
          "collections"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "parallel-execution-coordinator-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\parallel-execution-coordinator-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:09.308070",
        "functionality_score": 75.0,
        "documentation_score": 37.046908315565034,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "concurrent",
          "typing",
          "queue",
          "datetime",
          "os",
          "dataclasses",
          "importlib",
          "pathlib",
          "traceback",
          "sys",
          "threading"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "predictive-analysis-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\predictive-analysis-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:56:09.568608",
        "functionality_score": 85.0,
        "documentation_score": 37.28476821192053,
        "integration_score": 50.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "statistics",
          "typing",
          "datetime",
          "os",
          "pathlib",
          "traceback",
          "sys",
          "collections"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "real-time-monitoring-dashboard-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\real-time-monitoring-dashboard-frame.py",
        "category": "diagnostic",
        "analysis_timestamp": "2025-08-13T11:56:09.912212",
        "functionality_score": 85.0,
        "documentation_score": 36.91897654584221,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "typing",
          "psutil",
          "datetime",
          "dataclasses",
          "asyncio",
          "pathlib",
          "subprocess",
          "threading"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "research-information-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\research-information-frame.py",
        "category": "research",
        "analysis_timestamp": "2025-08-13T11:56:10.215744",
        "functionality_score": 75.0,
        "documentation_score": 37.24924012158055,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "research_chain",
            "description": "Can be enhanced with pattern recognition and synergy analysis",
            "related_frames": [
              "deep-pattern-recognition-frame.py",
              "synergy-analyzer.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "os",
          "dataclasses",
          "glob",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "resource-allocation-engine-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\resource-allocation-engine-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:10.580732",
        "functionality_score": 85.0,
        "documentation_score": 37.5,
        "integration_score": 85.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "typing",
          "queue",
          "psutil",
          "datetime",
          "dataclasses",
          "enum",
          "logging",
          "pathlib",
          "uuid",
          "threading"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "security-audit-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\security-audit-frame.py",
        "category": "security",
        "analysis_timestamp": "2025-08-13T11:56:10.853710",
        "functionality_score": 85.0,
        "documentation_score": 36.65289256198347,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [
          {
            "type": "configuration",
            "description": "Hardcoded values should be configurable",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [
          {
            "type": "security_chain",
            "description": "Can be chained with other security frames for comprehensive audit",
            "related_frames": [
              "security-audit-frame.py",
              "risk-assessment-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "dataclasses",
          "sys"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "self-healing-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\self-healing-frame.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:11.207529",
        "functionality_score": 75.0,
        "documentation_score": 36.25226860254084,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "time",
          "typing",
          "datetime",
          "os",
          "pathlib",
          "traceback",
          "sys",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "universal-task-orchestrator.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\universal-task-orchestrator.py",
        "category": "orchestration",
        "analysis_timestamp": "2025-08-13T11:56:11.600365",
        "functionality_score": 75.0,
        "documentation_score": 37.0,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "missing_dependency",
            "description": "Missing module: existence_check_frame",
            "severity": "high"
          }
        ],
        "synergies": [
          {
            "type": "orchestration_chain",
            "description": "Can coordinate with frame intelligence system for optimal execution",
            "related_frames": [
              "frame-intelligence-system.py",
              "universal-task-orchestrator.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "typing",
          "datetime",
          "os",
          "dataclasses",
          "existence_check_frame",
          "enum",
          "importlib",
          "sys",
          "subprocess"
        ],
        "recommendations": [
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Missing module: existence_check_frame"
        ]
      },
      {
        "frame_name": "webhook-endpoint-analyzer-frame.py",
        "file_path": "OCTOSPINE/TECHNICAL/scaffold-frames\\webhook-endpoint-analyzer-frame.py",
        "category": "analysis",
        "analysis_timestamp": "2025-08-13T11:56:11.968875",
        "functionality_score": 55.0,
        "documentation_score": 36.5,
        "integration_score": 70.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [
          {
            "type": "analysis_chain",
            "description": "Can be combined with other analysis frames for comprehensive insights",
            "related_frames": [
              "meta-analysis-frame.py",
              "predictive-analysis-frame.py"
            ]
          }
        ],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [
          "run_webhook_endpoint_analyzer"
        ],
        "dependencies": [
          "json",
          "re",
          "typing",
          "datetime",
          "pathlib",
          "os"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation"
        ],
        "priority_fixes": []
      },
      {
        "frame_name": "enhanced-error-detection-frame.cjs",
        "file_path": "scripts\\enhanced-error-detection-frame.cjs",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:12.218493",
        "functionality_score": 55.0,
        "documentation_score": 15.028063610851262,
        "integration_score": 55.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "error-detection-frame.js",
        "file_path": "scripts\\error-detection-frame.js",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:12.693203",
        "functionality_score": 55.0,
        "documentation_score": 15.062630480167014,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [],
        "blockers": [
          {
            "type": "syntax_error",
            "description": "Syntax error: invalid syntax (<unknown>, line 3)",
            "line": 3,
            "severity": "critical"
          }
        ],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Resolve blocking issues before deployment"
        ],
        "priority_fixes": [
          "Resolve blocker: Syntax error: invalid syntax (<unknown>, line 3)"
        ]
      },
      {
        "frame_name": "frame-optimizer.py",
        "file_path": "scripts\\frame-optimizer.py",
        "category": "utility",
        "analysis_timestamp": "2025-08-13T11:56:13.061517",
        "functionality_score": 45.0,
        "documentation_score": 16.142857142857142,
        "integration_score": 35.0,
        "risks": [],
        "gaps": [
          {
            "type": "error_handling",
            "description": "Missing error handling in functions",
            "severity": "high"
          },
          {
            "type": "documentation",
            "description": "Missing function documentation",
            "severity": "medium"
          }
        ],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [
          "json",
          "re",
          "typing",
          "pathlib",
          "os"
        ],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities",
          "Fill identified functionality gaps"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      },
      {
        "frame_name": "framework-validation.js",
        "file_path": "scripts\\framework-validation.js",
        "category": "meta_analysis",
        "analysis_timestamp": "2025-08-13T11:56:13.386241",
        "functionality_score": 0.0,
        "documentation_score": 0.0,
        "integration_score": 0.0,
        "risks": [],
        "gaps": [],
        "blockers": [],
        "synergies": [],
        "duplications": [],
        "pre_hooks": [],
        "post_hooks": [],
        "webhooks": [],
        "dependencies": [],
        "recommendations": [
          "Improve core functionality and error handling",
          "Add proper main function and entry points",
          "Add comprehensive docstrings and comments",
          "Add module-level documentation",
          "Improve integration with other system components",
          "Add database and API integration capabilities"
        ],
        "priority_fixes": [
          "Improve core functionality"
        ]
      }
    ],
    "system_recommendations": [
      "Improve documentation standards across all frames",
      "Critical: Most frames lack proper documentation",
      "Improve integration capabilities across frames",
      "Address 2 critical risks immediately",
      "Leverage 78 identified synergies"
    ],
    "priority_actions": [
      "Fix critical risk in comprehensive-frame-analyzer.py: Use of eval() function - potential code injection risk",
      "Fix critical risk in comprehensive-frame-analyzer.py: Use of exec() function - potential code injection risk",
      "Resolve blocker in frame-intelligence-system.py: Missing module: universal_task_orchestrator",
      "Resolve blocker in frame-intelligence-system.py: Missing module: research_information_frame",
      "Resolve blocker in frame-intelligence-system.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: research_information_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: security_audit_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in enhanced-error-detection-frame.cjs: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in error-detection-frame.js: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in frame-intelligence-system.py: Syntax error: expected 'except' or 'finally' block (<unknown>, line 547)",
      "Resolve blocker in frame-intelligence-system.py: Missing module: universal_task_orchestrator",
      "Resolve blocker in frame-intelligence-system.py: Missing module: research_information_frame",
      "Resolve blocker in frame-intelligence-system.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Syntax error: expected an indented block after 'try' statement on line 368 (<unknown>, line 369)",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: research_information_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: security_audit_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in enhanced-error-detection-frame.cjs: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in error-detection-frame.js: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in frame-intelligence-system.py: Missing module: universal_task_orchestrator",
      "Resolve blocker in frame-intelligence-system.py: Missing module: research_information_frame",
      "Resolve blocker in frame-intelligence-system.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: research_information_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: security_audit_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in enhanced-error-detection-frame.cjs: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in error-detection-frame.js: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in frame-intelligence-system.py: Missing module: universal_task_orchestrator",
      "Resolve blocker in frame-intelligence-system.py: Missing module: research_information_frame",
      "Resolve blocker in frame-intelligence-system.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: research_information_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: security_audit_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in enhanced-error-detection-frame.cjs: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in error-detection-frame.js: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in frame-intelligence-system.py: Missing module: universal_task_orchestrator",
      "Resolve blocker in frame-intelligence-system.py: Missing module: research_information_frame",
      "Resolve blocker in frame-intelligence-system.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: research_information_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: security_audit_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in enhanced-error-detection-frame.cjs: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in error-detection-frame.js: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in frame-intelligence-system.py: Missing module: universal_task_orchestrator",
      "Resolve blocker in frame-intelligence-system.py: Missing module: research_information_frame",
      "Resolve blocker in frame-intelligence-system.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: research_information_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: security_audit_frame",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in enhanced-error-detection-frame.cjs: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in error-detection-frame.js: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in enhanced-error-detection-frame.cjs: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in error-detection-frame.js: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in enhanced-error-detection-frame.cjs: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in error-detection-frame.js: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in universal-task-orchestrator.py: Missing module: existence_check_frame",
      "Resolve blocker in enhanced-error-detection-frame.cjs: Syntax error: invalid syntax (<unknown>, line 3)",
      "Resolve blocker in error-detection-frame.js: Syntax error: invalid syntax (<unknown>, line 3)",
      "Address high risk in comprehensive-dependency-manager-frame.py: Bare except clause - may mask important errors",
      "Address high risk in intelligent-caching-frame.py: Bare except clause - may mask important errors",
      "Address high risk in comprehensive-dependency-manager-frame.py: Bare except clause - may mask important errors",
      "Address high risk in intelligent-caching-frame.py: Bare except clause - may mask important errors",
      "Address high risk in comprehensive-dependency-manager-frame.py: Bare except clause - may mask important errors",
      "Address high risk in intelligent-caching-frame.py: Bare except clause - may mask important errors",
      "Address high risk in comprehensive-dependency-manager-frame.py: Bare except clause - may mask important errors",
      "Address high risk in intelligent-caching-frame.py: Bare except clause - may mask important errors",
      "Address high risk in comprehensive-dependency-manager-frame.py: Bare except clause - may mask important errors",
      "Address high risk in intelligent-caching-frame.py: Bare except clause - may mask important errors",
      "Address high risk in comprehensive-dependency-manager-frame.py: Bare except clause - may mask important errors",
      "Address high risk in intelligent-caching-frame.py: Bare except clause - may mask important errors"
    ]
  }
}